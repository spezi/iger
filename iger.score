{"Document":{"ObjectName":"Scenario::ScenarioDocumentModel","id":1,"BaseScenario":{"ObjectName":"Scenario::BaseScenario","id":0,"Constraint":{"ObjectName":"Scenario::IntervalModel","id":0,"Metadata":{"ScriptingName":"iger","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"de035912-5b03-49a8-bc4d-b2cba68e21d9","ObjectName":"Scenario","id":1,"Metadata":{"ScriptingName":"Scenario.1","Comment":"","Color":"Transparent1","Label":"","Touched":false},"Duration":10584000000,"Height":1455.0,"StartOffset":0,"LoopDuration":10584000000,"Pos":[40.0,40.0],"Size":[200.0,100.0],"Loops":false,"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"In","Exposed":"in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"StartTimeNodeId":0,"StartEventId":0,"StartStateId":0,"TimeNodes":[{"ObjectName":"Scenario::TimeSyncModel","id":2,"Metadata":{"ScriptingName":"Sync.judy55","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":46569600000,"Events":[2],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":1,"Metadata":{"ScriptingName":"Sync.gaur87","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[1],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "}],"Events":[{"ObjectName":"Scenario::EventModel","id":2,"Metadata":{"ScriptingName":"Event.foot7","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":2,"States":[3,4],"Condition":"","Date":46569600000,"Offset":0},{"ObjectName":"Scenario::EventModel","id":1,"Metadata":{"ScriptingName":"Event.gash20","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":1,"States":[2,5],"Condition":"","Date":0,"Offset":0},{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[0,1],"Condition":"","Date":0,"Offset":0}],"States":[{"ObjectName":"Scenario::StateModel","id":5,"Metadata":{"ScriptingName":"State.hose24","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":3,"NextConstraint":null,"HeightPercentage":0.03066666666666666,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":4,"Metadata":{"ScriptingName":"State.mart42","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":2,"PreviousConstraint":null,"NextConstraint":3,"HeightPercentage":0.03181443298969072,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":3,"Metadata":{"ScriptingName":"State.laws56","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":2,"PreviousConstraint":2,"NextConstraint":null,"HeightPercentage":0.074,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":2,"Metadata":{"ScriptingName":"State.dune22","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":1,"NextConstraint":2,"HeightPercentage":0.074,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":1,"Metadata":{"ScriptingName":"State.tale77","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":1,"HeightPercentage":0.074,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":null,"HeightPercentage":0.02,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}],"Constraints":[{"ObjectName":"Scenario::IntervalModel","id":3,"Metadata":{"ScriptingName":"Interval.dock43","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Graphal":true,"DefaultDuration":0,"MinDuration":0,"MaxDuration":0,"GuiDuration":0,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"StartState":4,"EndState":5,"StartDate":7536040942,"HeightPercentage":0.06},{"ObjectName":"Scenario::IntervalModel","id":2,"Metadata":{"ScriptingName":"Color Scales","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":45,"Metadata":{"ScriptingName":"StormyPalette","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[205.92169946813124,428.41494981661174],"Size":[115.6875,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*\n{\n  \"CATEGORIES\" : [\n    \"XXX\"\n  ],\n  \"DESCRIPTION\" : \"\",\n  \"ISFVSN\" : \"2\",\n  \"INPUTS\" : [\n  {\n      \"NAME\" : \"Scaling\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 3.0,\n      \"DEFAULT\" : 0.7,\n      \"MIN\" : 0.05\n    },\n  {\n      \"NAME\" : \"Calm\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 4.0,\n      \"DEFAULT\" : 1.0,\n      \"MIN\" : 0.001\n    },\n    {\n      \"NAME\" : \"Contrast\",\n      \"TYPE\" : \"float\",\n       \"MAX\" : 1.4,\n      \"DEFAULT\" : 1.1,\n      \"MIN\" : 0.7    },\n    {\n\t\t\t\"NAME\": \"Color1\",\n\t\t\t\"TYPE\": \"color\",\n\t\t\t\"DEFAULT\": [\n\t\t\t\t0.9,\n\t\t\t\t0.7,\n\t\t\t\t0.2,\n\t\t\t\t1.0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"Color2\",\n\t\t\t\"TYPE\": \"color\",\n\t\t\t\"DEFAULT\": [\n\t\t\t\t0.3,\n\t\t\t\t0.7,\n\t\t\t\t1.0,\n\t\t\t\t1.0\n\t\t\t]\n\t\t}\t\t\n  ],\n  \"CREDIT\" : \"\"\n}\n*/\n//By Silvia Fabiani\n// Based on @patriciogv - 2015\n// http://patriciogonzalezvivo.com\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3WDATE\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0,1.000));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\nfloat TT = clamp(TIME,0.0,12.0);\nfloat fbm ( in vec2 _st) {\n    float v = -0.5;\n    float a = Contrast;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(Calm), sin(1.02), -sin(0.5), cos(- 0.001));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/RENDERSIZE.xy*3.;\n    st += st * Scaling ;\n    vec3 color = vec3(0.0);\n\n    vec2 q = vec2(0.);\n    q.x = fbm( st + 0.00*TIME);\n    q.y = fbm( st + vec2(1.0));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( st + 1.0*q + vec2(1.7,9.2)+ 0.15*TIME );\n    r.y = fbm( st + 1.0*q + vec2(8.3,2.8)+ 0.126 * TIME);\n\n    float f = fbm(st+r);\n    color = mix(vec3(0.2,0.2,0.6),\n                vec3(0.1,0.1,0.5),\n                clamp((f*f)*-0.096,0.0,0.0));\n\n    color = mix(color,\n                vec3(Color1 + cos (TIME/TT/2.0)),\n                clamp(length(q),0.0,1.0));\n\n    color = mix(color,\n                vec3(Color2 + sin (TIME/TT/2.0)),\n                clamp(length(r.x),0.0,1.0));\n\n    gl_FragColor = vec4((f*f*f+.6 * f*f+.5*f)*color,1.);\n}\n\n","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Scaling","Exposed":"scaling","Value":{"Float":0.699999988079071},"Domain":{"Float":{"Min":0.05000000074505806,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Calm","Exposed":"calm","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":4.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Contrast","Exposed":"contrast","Value":{"Float":1.100000023841858},"Domain":{"Float":{"Min":0.699999988079071,"Max":1.399999976158142}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Color1","Exposed":"color1","Value":{"Vec4f":[0.8999999761581421,0.699999988079071,0.20000000298023224,1.0]},"Domain":{}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"Color2","Exposed":"color2","Value":{"Vec4f":[0.30000001192092896,0.699999988079071,1.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":44,"Metadata":{"ScriptingName":"SmoothXORi","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-784.0783005318688,41.41494981661174],"Size":[115.6875,22.0],"Loops":false,"Vertex":"void main() {\n\tvv_vertShaderInit();\n}","Fragment":"/*{\n\t\"CREDIT\": \"by mojovideotech\",\n  \"CATEGORIES\": [\n    \"2d\",\n    \"xor\",\n    \"tiling\",\n    \"Automatically Converted\"\n  ],\n  \"DESCRIPTION\": \"Automatically converted from https://www.shadertoy.com/view/Ml2GWy by iq.\",\n  \"IMPORTED\": [\n    \n  ],\n  \"INPUTS\": [\n\t\t\t{\n            \"NAME\": \"rate\",\n            \"TYPE\": \"float\",\n           \"DEFAULT\": 4.8,\n            \"MIN\": 0.5,\n            \"MAX\": 10.0\n        },\n          {\n            \"NAME\": \"intensity\",\n            \"TYPE\": \"float\",\n           \"DEFAULT\": 0.86,\n            \"MIN\": 0.1,\n            \"MAX\": 0.99\n        },\n                          {\n            \"NAME\": \"seed1\",\n            \"TYPE\": \"float\",\n           \"DEFAULT\": 0.0087,\n            \"MIN\": 0.0005,\n            \"MAX\": 0.0050\n        },\n                  {\n            \"NAME\": \"seed2\",\n            \"TYPE\": \"float\",\n           \"DEFAULT\": 0.33,\n            \"MIN\": 0.01,\n            \"MAX\": 0.99\n        },\n          {\n            \"NAME\": \"zoom\",\n            \"TYPE\": \"float\",\n           \"DEFAULT\": 3,\n            \"MIN\": 1,\n            \"MAX\": 20\n        },\n        \t\t\t{\n            \"NAME\": \"tint\",\n            \"TYPE\": \"float\",\n           \"DEFAULT\": 0.35,\n            \"MIN\": 0.1,\n            \"MAX\": 0.6\n        }\n  ]\n}\n*/\n\n// IQ_SmoothXOR by mojovideotech // // added input ctrls - 2015.09.09 // //\n// based on : www.shadertoy.com/view/Ml2GWy\n// created by IQ : www.iquilezles.org/\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\nvoid main()\n{\n    vec2 pos = (RENDERSIZE.y/zoom)*gl_FragCoord.xy/RENDERSIZE.x - (TIME*rate-zoom);\n\n    vec3 col = vec3(0.0);\n    for( int i=0; i<6; i++ ) \n    {\n        vec2 a = floor(pos);\n        vec2 b = fract(pos);\n        \n        vec4 w = fract((sin(a.x*7.0+31.0*a.y + 0.01*TIME)+vec4(seed2,0.01,0.0,0.7))*pow(139.74812,seed1)*123.2352456); // randoms\n                \n        col += w.xyz *                                   // color\n               smoothstep(intensity*sqrt(intensity),intensity,w.w) *               // intensity\n               sqrt(16.0*b.x*b.y*(1.0-b.x)*(1.0-b.y) ); // pattern\n        \n        pos /= 2.0; // lacunarity\n        col /= (2.5-intensity); // attenuate high frequencies\n    }\n    \n    col = pow( 1.5*col, vec3(tint+0.2,1.0,0.9-tint) );    // contrast and color shape\n    \n    gl_FragColor = vec4( col, 1.0 );\n}","Inlets":[],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"3f4a41f2-fa39-420f-ab0f-0af6b8409edb","ObjectName":"Process::ProcessModel","id":43,"Metadata":{"ScriptingName":"Value display","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[75.92169946813124,591.4149498166117],"Size":[200.0,100.0],"Loops":false,"Inlets":[{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Control","Exposed":"control","Value":{},"Domain":{}}],"Outlets":[]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":42,"Metadata":{"ScriptingName":"QuaziCrystal","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[200.4372848241385,366.55221812551235],"Size":[115.6875,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n\t\"CREDIT\": \"by mojovideotech\",\n  \"CATEGORIES\" : [\n    \"Automatically Converted\",\n    \"generator\"\n  ],\n  \"DESCRIPTION\" : \"based on https:\\/\\/www.shadertoy.com\\/view\\/lljfDd by dlsym\",\n  \"INPUTS\" : [\n\t{\n\t\t\"NAME\" : \t\t\"K\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" :\t\t7.0,\n\t\t\"MIN\" : \t\t1.0,\n\t\t\"MAX\" : \t\t24.0\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"scale\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t1.75,\n\t\t\"MIN\" : \t\t1.0,\n\t\t\"MAX\" : \t\t2.0\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"rate\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t3.0,\n\t\t\"MIN\" : \t\t0.0,\n\t\t\"MAX\" : \t\t5.0\n\t},\n\t{\n      \t\"NAME\" : \t\t\"c1\",\n      \t\"TYPE\" : \t\t\"color\",\n      \t\"DEFAULT\" :\t[ 0.4, 0.33, 0.5, 1.0 ]\n   \t},\n    {\n      \t\"NAME\" : \t\t\"c2\",\n      \t\"TYPE\" : \t\t\"color\",\n      \t\"DEFAULT\" :\t[ 0.9, 0.9, 0.9, 1.0 ]\n    },\n    {\n      \t\"NAME\" : \t\t\"c3\",\n      \t\"TYPE\" : \t\t\"color\",\n      \t\"DEFAULT\" :\t[ 0.9, 0.5, 0.33, 1.0 ]\n    },\n    {\n      \t\"NAME\" : \t\t\"c4\",\n      \t\"TYPE\" : \t\t\"color\",\n      \t\"DEFAULT\" :\t[ 0.8, 0.6, 0.9, 1.0 ]\n    }\n  ]\n}\n*/\n\n\n////////////////////////////////////////////////////////////\n// QuaziCrystal  by mojovideotech\n//\n// based on :\n// shadertoy.com\\/lljfDd by dlsym\n//\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n////////////////////////////////////////////////////////////\n\n\n\n#define \tpi   \t3.141592653589793 \t// pi\n\n// http://www.iquilezles.org/www/articles/palettes/palettes.htm\nvec4 colorize(float t, vec3 a, vec3 b, vec3 c, vec3 d) {\n    vec3 col = 2.5 * a * b * (cos(0.4*pi*(c*t+d))); \n    return vec4(col, 1.0);\n}\n\nfloat v(vec2 coord, float k, float s, float rot) {\n    float cx = cos(rot), sy = sin(rot);\n    return 0.0 + 0.5 * cos((cx * coord.x + sy * coord.y) * k + s);\n}\n\nvoid main() {\n   \tfloat T = rate * TIME;\n    vec2 uv = gl_FragCoord.xy - (0.5 * RENDERSIZE.xy); // center\n    float vt = 0.0, j = floor(K);\n    for(int i = 0; i < 24; i++) {\n    \tif (float(i) >= j) break;\n        float s = float(i) * pi / j;\n    \tfloat w = v(uv, 2.1-scale, T, s);\n        vt += w / 0.5;\n    }\n\tgl_FragColor = colorize(vt, c1.rgb, c2.rgb, c3.rgb, c4.rgb);\n}\n","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"K","Exposed":"k","Value":{"Float":24.0},"Domain":{"Float":{"Min":1.0,"Max":24.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"scale","Exposed":"scale","Value":{"Float":2.0},"Domain":{"Float":{"Min":1.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"rate","Exposed":"rate","Value":{"Float":3.1457786560058594},"Domain":{"Float":{"Min":0.0,"Max":5.0}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"c1","Exposed":"c1","Value":{"Vec4f":[1.0,1.0,1.0,1.0]},"Domain":{}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"c2","Exposed":"c2","Value":{"Vec4f":[0.95863276720047,0.95863276720047,0.95863276720047,1.0]},"Domain":{}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"c3","Exposed":"c3","Value":{"Vec4f":[0.1886320263147354,0.1886320263147354,0.1886320263147354,1.0]},"Domain":{}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"c4","Exposed":"c4","Value":{"Vec4f":[0.0,0.0,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"1e17e479-3513-44c8-a8a7-017be9f6ac8a","ObjectName":"Process::ProcessModel","id":41,"Metadata":{"ScriptingName":"LFO","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-257.08484731080586,431.96128964692275],"Size":[330.0,130.0],"Loops":false,"Inlets":[{"uuid":"5554eb67-bcc8-45ab-8ec2-37a3f191aa64","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Frequency","Exposed":"frequency","Value":{"Float":0.6428844928741455},"Domain":{"Float":{"Min":0.009999999776482582,"Max":100.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Ampl.","Exposed":"ampl.","Value":{"Float":0.013333333656191826},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Offset","Exposed":"offset","Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Jitter","Exposed":"jitter","Value":{"Float":0.17142857611179352},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"Phase","Exposed":"phase","Value":{"Float":0.06476187705993652},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"8b1d76c4-3838-4ac0-9b9c-c12bc5db8e8a","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"Waveform","Exposed":"waveform","Value":{"String":"Sin"},"Domain":{"String":{"Values":["Sin","Triangle","Saw","Square","Sample & Hold","Noise 1","Noise 2","Noise 3"]}},"Values":["Sin","Triangle","Saw","Square","Sample & Hold","Noise 1","Noise 2","Noise 3"],"Pixmaps":[":/icons/wave_sin_off.png",":/icons/wave_sin_on.png",":/icons/wave_triangle_off.png",":/icons/wave_triangle_on.png",":/icons/wave_saw_off.png",":/icons/wave_saw_on.png",":/icons/wave_square_off.png",":/icons/wave_square_on.png",":/icons/wave_sample_and_hold_off.png",":/icons/wave_sample_and_hold_on.png",":/icons/wave_noise1_off.png",":/icons/wave_noise1_on.png",":/icons/wave_noise2_off.png",":/icons/wave_noise2_on.png",":/icons/wave_noise3_off.png",":/icons/wave_noise3_on.png"]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"Quantification","Exposed":"quantification","Value":{"Float":1.0},"Domain":{"Float":{"Values":[0.0,1.0,0.5,0.25,0.125,0.0625,0.03125,0.015625,0.75,0.375,0.1875,0.09375,0.046875]}},"Values":[["None",{"Float":0.0}],["Whole",{"Float":1.0}],["Half",{"Float":0.5}],["4th",{"Float":0.25}],["8th",{"Float":0.125}],["16th",{"Float":0.0625}],["32th",{"Float":0.03125}],["64th",{"Float":0.015625}],["Dotted Half",{"Float":0.75}],["Dotted 4th",{"Float":0.375}],["Dotted 8th",{"Float":0.1875}],["Dotted 16th",{"Float":0.09375}],["Dotted 32th",{"Float":0.046875}]]}],"Outlets":[{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"out","Exposed":"out"}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":40,"Metadata":{"ScriptingName":"W-NoiseParticleCluster","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[189.14911352615127,311.13690695342046],"Size":[179.53125,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n\t\"CREDIT\": \"by mojovideotech\",\n\t\"DESCRIPTION\": \"\",\n\t\"CATEGORIES\": [\n\t\t\"Worley noise\"\n\t],\n\t\"INPUTS\": [\n\t{\n\t\t\"NAME\" : \t\t\"scale\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t40.0,\n\t\t\"MIN\" : \t\t1.0,\n\t\t\"MAX\" : \t\t100.0\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"rate\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t1.0,\n\t\t\"MIN\" : \t\t0.0,\n\t\t\"MAX\" : \t\t3.0\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"gravity\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t0.1,\n\t\t\"MIN\" : \t\t0.01,\n\t\t\"MAX\" : \t\t0.5\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"density\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t0.15,\n\t\t\"MIN\" : \t\t0.001,\n\t\t\"MAX\" : \t\t0.5\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"fade\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t16.0,\n\t\t\"MIN\" : \t\t2.0,\n\t\t\"MAX\" : \t\t100.0\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"jitter\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t0.9,\n\t\t\"MIN\" : \t\t0.25,\n\t\t\"MAX\" : \t\t0.999\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"depth\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t0.95,\n\t\t\"MIN\" : \t\t0.1,\n\t\t\"MAX\" : \t\t2.5\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"multiply\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t0.75,\n\t\t\"MIN\" : \t\t0.0,\n\t\t\"MAX\" : \t\t1.0\n\t},\n\t{\n\t\t\"NAME\": \"cells\",\n\t\t\"TYPE\": \"bool\",\n\t\t\"DEFAULT\": 0.0\n\t}\n\t]\n}*/\n\n\n////////////////////////////////////////////////////////////\n// W-NoiseParticleCluster  by mojovideotech\n//\n// based on :\n// shadertoy.com/\\XlSBDz\n//\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 *\n// \n// * cellular2x2x2 (\"Worley noise\") in 3D in GLSL.\n// © 2011 Stefan Gustavson  All rights reserved under MIT license.\n////////////////////////////////////////////////////////////\n\n\nvec4 permute(vec4 x) {\n  return mod(((34.0 * x) + 1.0) * x, 289.0);\n}\n\nvec2 cellular2x2x2(vec3 P) {\n\t#define K 0.142857142857 // 1/7\n\t#define Ko 0.428571428571 // 1/2-K/2\n\t#define K2 0.020408163265306 // 1/(7*7)\n\t#define Kz 0.166666666667 // 1/6\n\t#define Kzo 0.416666666667 // 1/2-1/6*2\n\tvec3 Pi = mod(floor(P), 289.0);\n \tvec3 Pf = fract(P);\n\tvec4 Pfx = Pf.x + vec4(0.0, -1.0, 0.0, -1.0);\n\tvec4 Pfy = Pf.y + vec4(0.0, 0.0, -1.0, -1.0);\n\tvec4 p = permute(Pi.x + vec4(0.0, 1.0, 0.0, 1.0));\n\tp = permute(p + Pi.y + vec4(0.0, 0.0, 1.0, 1.0));\n\tvec4 p1 = permute(p + Pi.z); \n\tvec4 p2 = permute(p + Pi.z + vec4(1.0)); \n\tvec4 ox1 = fract(p1*K) - Ko;\n\tvec4 oy1 = mod(floor(p1*K), 7.0)*K - Ko;\n\tvec4 oz1 = floor(p1*K2)*Kz - Kzo;\n\tvec4 ox2 = fract(p2*K) - Ko;\n\tvec4 oy2 = mod(floor(p2*K), 7.0)*K - Ko;\n\tvec4 oz2 = floor(p2*K2)*Kz - Kzo;\n\tvec4 dx1 = Pfx + jitter*ox1;\n\tvec4 dy1 = Pfy + jitter*oy1;\n\tvec4 dz1 = Pf.z + jitter*oz1;\n\tvec4 dx2 = Pfx + jitter*ox2;\n\tvec4 dy2 = Pfy + jitter*oy2;\n\tvec4 dz2 = Pf.z - 1.0 + jitter*oz2;\n\tvec4 d1 = dx1 * dx1 + dy1 * dy1 + dz1 * dz1; \n\tvec4 d2 = dx2 * dx2 + dy2 * dy2 + dz2 * dz2;\n#if 0\n\td1 = min(d1, d2);\n\td1.xy = min(d1.xy, d1.wz);\n\td1.x = min(d1.x, d1.y);\n\treturn sqrt(d1.xx);\n#else\n\tvec4 d = min(d1,d2);\n\td2 = max(d1,d2); \n\td.xy = (d.x < d.y) ? d.xy : d.yx;\n\td.xz = (d.x < d.z) ? d.xz : d.zx;\n\td.xw = (d.x < d.w) ? d.xw : d.wx; \n\td.yzw = min(d.yzw, d2.yzw); \n\td.y = min(d.y, d.z); \n\td.y = min(d.y, d.w); \n\td.y = min(d.y, d2.x); \n\treturn sqrt(d.xy); \n#endif\n}\n\nvoid main() {\n\tfloat T = TIME * rate, w, c;\n    vec2 uv = (gl_FragCoord.xy - RENDERSIZE.xy*0.5)/RENDERSIZE.y;\n   \tw = depth - dot(uv, uv)*fade;\n    uv *= 101.0-scale;    \n    vec2 ip = floor(uv);\n    vec2 v = cellular2x2x2(vec3(uv, T));\n    if (cells) c = v.y - v.x;\n    \telse c = v.x;\n   \tc -= gravity*w;\n    c = smoothstep(0.0, max(density/c, multiply), c);\n    vec3 col = 1.0-(mix(vec3(0.0), vec3(1.0), c));\n    gl_FragColor = vec4(sqrt(max(col, 0.0)), 1.0);\n}\n","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"scale","Exposed":"scale","Value":{"Float":33.828895568847656},"Domain":{"Float":{"Min":1.0,"Max":100.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"rate","Exposed":"rate","Value":{"Float":1.6494266986846924},"Domain":{"Float":{"Min":0.0,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"gravity","Exposed":"gravity","Value":{"Float":0.2794063687324524},"Domain":{"Float":{"Min":0.009999999776482582,"Max":0.5}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"density","Exposed":"density","Value":{"Float":0.10707975178956985},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":0.5}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"fade","Exposed":"fade","Value":{"Float":16.0},"Domain":{"Float":{"Min":2.0,"Max":100.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"jitter","Exposed":"jitter","Value":{"Float":0.8999999761581421},"Domain":{"Float":{"Min":0.25,"Max":0.9990000128746033}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"depth","Exposed":"depth","Value":{"Float":0.949999988079071},"Domain":{"Float":{"Min":0.10000000149011612,"Max":2.5}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"multiply","Exposed":"multiply","Value":{"Float":0.75},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"cells","Exposed":"cells","Value":{"Bool":false},"Domain":{"Bool":null}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":39,"Metadata":{"ScriptingName":"Solid Color","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[191.52951990437612,99.28073929139207],"Size":[115.6875,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Color\",\n        \"Utility\"\n    ],\n    \"CREDIT\": \"by Carter Rosenberg\",\n    \"DESCRIPTION\": \"demonstrates the use of color-type image inputs\",\n    \"INPUTS\": [\n        {\n            \"DEFAULT\": [\n                1,\n                0,\n                0,\n                1\n            ],\n            \"NAME\": \"Color\",\n            \"TYPE\": \"color\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\nvoid main()\n{\n\tgl_FragColor = Color;\n}\n","Inlets":[{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Color","Exposed":"color","Value":{"Vec4f":[1.0,1.0,1.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":38,"Metadata":{"ScriptingName":"Kaleidolines","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[185.57850395881366,207.5892295006313],"Size":[115.6875,22.0],"Loops":false,"Vertex":"","Fragment":"// SaturdayShader Week 34 : Kaleidolines\n// Joseph Fiola (http://www.joefiola.com)\n// 2016-04-09\n\n// Based on Shadertoy created by Vinicius Graciano Santos - vgs/2014\n// https://www.shadertoy.com/view/lsBSDz\n\n\n/*{\n  \"CREDIT\": \"\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\": [\n    \"Generator\"\n  ],\n  \"INPUTS\": [\n    {\n      \"NAME\": \"invert\",\n      \"TYPE\": \"bool\",\n      \"DEFAULT\": \"1\"\n    },\n    {\n      \"NAME\": \"zoom\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 2,\n      \"MIN\": 0.25,\n      \"MAX\": 20\n    },\n    {\n      \"NAME\": \"rotateCanvas\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": 0,\n      \"MAX\": 1\n    },\n    {\n      \"NAME\": \"rotateLines\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": 0,\n      \"MAX\": 1\n    },\n    {\n      \"NAME\": \"lineThickness\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.5,\n      \"MIN\": 0.1,\n      \"MAX\": 20\n    },\n    {\n      \"NAME\": \"lineLength\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 1,\n      \"MIN\": 0.05,\n      \"MAX\": 10\n    },\n    {\n      \"NAME\": \"lines1\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 10,\n      \"MIN\": 1,\n      \"MAX\": 10\n    },\n    {\n      \"NAME\": \"lines2\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 10,\n      \"MIN\": 1,\n      \"MAX\": 10\n    },\n    {\n      \"NAME\": \"offset\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": -2,\n      \"MAX\": 2\n    },\n    {\n      \"NAME\": \"motion\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.25,\n      \"MIN\": 0,\n      \"MAX\": 1\n    },\n    {\n      \"NAME\": \"pos\",\n      \"TYPE\": \"point2D\",\n      \"DEFAULT\": [\n        0.5,\n        0.5\n      ],\n      \"MIN\": [\n        0,\n        0\n      ],\n      \"MAX\": [\n        1,\n        1\n      ]\n    }\n  ]\n}*/\n\n\n#define TAU 6.28318530718\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec2 tile(vec2 _st, float _zoom){\n  _st *= _zoom;\n  return fract(_st);\n}\n\nfloat segment(vec2 p, vec2 a, vec2 b) {\n    vec2 ab = b - a;\n    vec2 ap = p - a;\n    float k = clamp(dot(ap, ab)/dot(ab, ab), 0.0, lineLength);\n    return smoothstep(0.0, 0.003 + lineThickness/RENDERSIZE.y, length(ap - k*ab) - (0.001 * lineThickness * 5. ));\n}\n\nfloat shape(vec2 p, float angle) {\n    float d = 100.0;\n    vec2 a = vec2(1.0, 0.0), b;\n    vec2 rot = vec2(cos(angle), sin(angle));\n    \n    for (int i = 0; i < 10; ++i) {\n    \t        a = a + offset;\n    \tif (i >= int(lines1)) break;\n        b = a;\n        for (int j = 0; j < 10; ++j) {\n        \tif (j >= int(lines2)) break;\n        \tb = vec2(b.x*rot.x - b.y*rot.y, b.x*rot.y + b.y*rot.x);\n        \tp = rotate2d(rotateLines* -TAU) * p;\n        \td = min(d, segment(p,  a, b));\n        }\n        a = vec2(a.x*rot.x - a.y*rot.y, a.x*rot.y + a.y*rot.x);\n\n    }\n    return d;\n}\n\nvoid main() {\n\n    vec2 uv = gl_FragCoord.xy / RENDERSIZE.xy;\n    uv -= vec2(pos);\n\tuv.x *= RENDERSIZE.x/RENDERSIZE.y;\n\tuv = rotate2d(rotateCanvas *-TAU) * uv;\n\tuv *= zoom;\n        \n    float col = shape(abs(uv), cos((motion * TAU * (TIME*0.05))));\n    \n    if  (invert) col = col *-1.0 + 1.0;\n    \n    gl_FragColor = vec4(vec3(col), 1.0);\n}\n\n","Inlets":[{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"invert","Exposed":"invert","Value":{"Bool":false},"Domain":{"Bool":null}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"zoom","Exposed":"zoom","Value":{"Float":0.9225701093673706},"Domain":{"Float":{"Min":0.25,"Max":20.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"rotateCanvas","Exposed":"rotatecanvas","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"rotateLines","Exposed":"rotatelines","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"lineThickness","Exposed":"linethickness","Value":{"Float":0.5},"Domain":{"Float":{"Min":0.10000000149011612,"Max":20.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"lineLength","Exposed":"linelength","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.05000000074505806,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"lines1","Exposed":"lines1","Value":{"Float":10.0},"Domain":{"Float":{"Min":1.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"lines2","Exposed":"lines2","Value":{"Float":10.0},"Domain":{"Float":{"Min":1.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"offset","Exposed":"offset","Value":{"Float":0.0},"Domain":{"Float":{"Min":-2.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"motion","Exposed":"motion","Value":{"Float":0.25},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"pos","Exposed":"pos","Value":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":37,"Metadata":{"ScriptingName":"Pattern_DataBlocks_03","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[184.38830076970112,257.57776344335684],"Size":[178.5,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n  \"CREDIT\": \"AxiomCrux.net\",\n  \"DESCRIPTION\": \"Data Patterns\",\n  \"CATEGORIES\": [  \t\t\"generator\",  \t\t\"2d\"  \t],\n  \"INPUTS\": [  \n    {   \"NAME\": \"grid\",     \"TYPE\": \"point2D\",  \"MIN\": [6,6],  \"MAX\": [50,50],     \"DEFAULT\": [45,50]  },    \n    {   \"NAME\": \"grid2\",     \"TYPE\": \"point2D\",  \"MIN\": [6,6],  \"MAX\": [50,50],     \"DEFAULT\": [6,50]  },\n    {   \"NAME\": \"center\",   \"TYPE\": \"point2D\", \t\"MIN\": [-1.0,-1.0],  \"MAX\": [1.0,1.0],     \"DEFAULT\": [0,0]},\n    {   \"NAME\": \"curve\",     \"TYPE\": \"point2D\"},\n    {\t\"NAME\": \"shift\", \t\"TYPE\": \"float\",    \"MIN\": 0,       \"MAX\": 1,       \"DEFAULT\": 0.20 }, \n    {   \"NAME\": \"density\",  \"TYPE\": \"float\",    \"MIN\": -900,    \"MAX\": 1800,    \"DEFAULT\": 270.0    \t},\n    {   \"NAME\": \"rate\",     \"TYPE\": \"float\",    \"MIN\": -3,      \"MAX\": 3,       \"DEFAULT\": -0.05    \t},\n    {   \"NAME\": \"seed\",    \"TYPE\": \"float\",     \"MIN\": 8,       \"MAX\": 233,     \"DEFAULT\": 71.34     \t},\n    {   \"NAME\": \"offset\",  \"TYPE\": \"float\",     \"DEFAULT\": -0.05,      \"MIN\": -0.051,      \"MAX\": 10    },\n\t{\t\"NAME\": \"polar_on\",\t\"TYPE\": \"bool\"}\t\n\t\n]}*/\n#ifdef GL_ES\nprecision highp float;\n#endif\n#define TWO_PI 6.28318530718\n#define seed2 seed+218.0\n#define seed1 seed+3578.1\n#define seed3 seed+45378.0\n#define offset1 (offset<5.0)?offset*5.1:1.0\n#define offset2 (offset>5.0)?(offset-5.0)*0.01:0.0\n///////////////////////////////////////////\n// based on :www.patriciogonzalezvivo.com/2015/thebookofshaders/10/ikeda-03.frag from :thebookofshaders.com  by Patricio Gonzalez Vivo\n///////////////////////////////////////////\nfloat ranf(in float x) { return fract(sin(x)*1e4);}\nfloat rant(in vec2 st) { return fract(sin(dot(st.xy, vec2(seed1,seed2)))*seed3);}\nfloat random(in float x){ return fract(sin(x)*seed); } // original value was 43758.5453\nfloat random(in vec2 st){ return fract(sin(dot(st.xy,vec2(seed*0.5,seed*2.0))) * seed); }  // 12.9898,\t78.233,  & 43758.5453\nfloat pattern(vec2 st, vec2 v, float t) {    vec2 p = floor(st+v);    return step(t, rant(100.+p*.000001)+ranf(p.x)*0.5 );}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nfloat randomChar(vec2 outer,vec2 inner){\n    //float grid = grid.x;\n    vec2 margin = grid2; //vec2(xScale,yScale);\n    vec2 borders = step(margin,inner)*step(margin,1.-inner);\n    vec2 ipos = floor(inner*grid.x);\n    vec2 fpos = fract(inner*grid.y);\n    return step(0.5,random(outer*64.+ipos)) * borders.x * borders.y * step(shift,fpos.x) * step(shift,fpos.y);\n}\nvoid main() {\n    vec2 st = gl_FragCoord.xy/RENDERSIZE.xy;\n    st.x *= RENDERSIZE.x/RENDERSIZE.y;\n    //st -= vec2(0.5 * RENDERSIZE.x/RENDERSIZE.y, 0.5);\n\tst -= center;\n \n    vec2 polar ;  \n\t//st -= 0.5;    \n    polar.x = atan(st.x - 0.5, st.y - 0.5) * 5.;\n    polar.y = length(st - 0.5);\n    st = polar_on?mix(st,polar,curve):st;\n    \n    st *= grid;  \n\n    vec2 ipos = floor(st);  \n    vec2 fpos = fract(st); \n                \n//    ipos -= vec2(0.,floor(TIME*rate*random(ipos.x+1.)));\n    \n    vec2 vel = vec2(TIME*rate*max(grid.x,grid.y)); \n    //st *= grid2;   \n    vel *= vec2(-1.,0.0) * ranf(1.0+ipos.y); \n    vel*= grid2;\n    vec2 off1 = vec2(offset1,0.);\n    vec2 off2 = vec2(offset2,0.);\n    \n    vec3 color = vec3(0.0);\n    color.r = pattern(st+off1,vel,0.5+density/RENDERSIZE.x);\n    color.g = pattern(st,vel,0.5+density/RENDERSIZE.x);\n    color.b = pattern(st-off2,vel,0.5+density/RENDERSIZE.x); \n    color *= step(shift,fpos.y);\n    gl_FragColor = vec4(color,1.0);\n}","Inlets":[{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"grid","Exposed":"grid","Value":{"Vec2f":[45.0,50.0]},"Domain":{"Vec2f":{"Min":[6.0,6.0],"Max":[50.0,50.0],"Values":[[],[]]}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"grid2","Exposed":"grid2","Value":{"Vec2f":[6.0,50.0]},"Domain":{"Vec2f":{"Min":[6.0,6.0],"Max":[50.0,50.0],"Values":[[],[]]}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"center","Exposed":"center","Value":{"Vec2f":[0.47106826305389404,-0.8355703353881836]},"Domain":{"Vec2f":{"Min":[-1.0,-1.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"curve","Exposed":"curve","Value":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"shift","Exposed":"shift","Value":{"Float":0.2881355881690979},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"density","Exposed":"density","Value":{"Float":91.525390625},"Domain":{"Float":{"Min":-900.0,"Max":1800.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"rate","Exposed":"rate","Value":{"Float":-0.11864423751831055},"Domain":{"Float":{"Min":-3.0,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"seed","Exposed":"seed","Value":{"Float":43.59321975708008},"Domain":{"Float":{"Min":8.0,"Max":233.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"offset","Exposed":"offset","Value":{"Float":-0.050999999046325684},"Domain":{"Float":{"Min":-0.050999999046325684,"Max":10.0}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"polar_on","Exposed":"polar_on","Value":{"Bool":true},"Domain":{"Bool":null}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":36,"Metadata":{"ScriptingName":"Video Mixer.1","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[635.4753094433461,95.71012972405453],"Size":[117.671875,80.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"General\"\n    ],\n    \"CREDIT\": \"Jamie Owen, Jean-Michaël Celerier\",\n    \"DESCRIPTION\": \"8-channel video mixer\",\n    \"INPUTS\": [\n        { \"NAME\": \"t1\", \"LABEL\" : \"Texture 1\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t2\", \"LABEL\" : \"Texture 2\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t3\", \"LABEL\" : \"Texture 3\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t4\", \"LABEL\" : \"Texture 4\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t5\", \"LABEL\" : \"Texture 5\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t6\", \"LABEL\" : \"Texture 6\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t7\", \"LABEL\" : \"Texture 7\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t8\", \"LABEL\" : \"Texture 8\", \"TYPE\": \"image\" },\n        { \"NAME\": \"alpha1\", \"LABEL\" : \"Alpha 1\", \"DEFAULT\": 1, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha2\", \"LABEL\" : \"Alpha 2\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha3\", \"LABEL\" : \"Alpha 3\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha4\", \"LABEL\" : \"Alpha 4\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha5\", \"LABEL\" : \"Alpha 5\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha6\", \"LABEL\" : \"Alpha 6\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha7\", \"LABEL\" : \"Alpha 7\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha8\", \"LABEL\" : \"Alpha 8\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 1\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode1\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 2\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode2\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 3\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode3\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 4\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode4\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 5\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode5\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 6\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode6\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 7\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode7\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n/* Blend mode implementations courtesy of Jamie Owen:\n\n   https://github.com/jamieowen/glsl-blend\n\nThe MIT License (MIT) Copyright (c) 2015 Jamie Owen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nvec3 blendPhoenix(vec3 base, vec3 blend) {\n  return min(base, blend) - max(base, blend) + vec3(1.0);\n}\n\nvec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {\n  return (blendPhoenix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n  return base < 0.5 ? (2.0 * base * blend)\n                    : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n  return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g),\n              blendOverlay(base.b, blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n  return (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNormal(vec3 base, vec3 blend) { return blend; }\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n  return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNegation(vec3 base, vec3 blend) {\n  return vec3(1.0) - abs(vec3(1.0) - base - blend);\n}\n\nvec3 blendNegation(vec3 base, vec3 blend, float opacity) {\n  return (blendNegation(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend) { return base * blend; }\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n  return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendReflect(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);\n}\n\nvec3 blendReflect(vec3 base, vec3 blend) {\n  return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g),\n              blendReflect(base.b, blend.b));\n}\n\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\n  return (blendReflect(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendAverage(vec3 base, vec3 blend) { return (base + blend) / 2.0; }\n\nvec3 blendAverage(vec3 base, vec3 blend, float opacity) {\n  return (blendAverage(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearBurn(float base, float blend) {\n  // Note : Same implementation as BlendSubtractf\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendSubtract\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLighten(float base, float blend) { return max(blend, base); }\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n  return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g),\n              blendLighten(base.b, blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n  return (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendScreen(float base, float blend) {\n  return 1.0 - ((1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n  return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g),\n              blendScreen(base.b, blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n  return (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSoftLight(float base, float blend) {\n  return (blend < 0.5)\n             ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend))\n             : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend) {\n  return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g),\n              blendSoftLight(base.b, blend.b));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n  return (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSubtract(float base, float blend) {\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend) {\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend, float opacity) {\n  return (blendSubtract(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend) {\n  return base + blend - 2.0 * base * blend;\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend, float opacity) {\n  return (blendExclusion(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendDifference(vec3 base, vec3 blend) { return abs(base - blend); }\n\nvec3 blendDifference(vec3 base, vec3 blend, float opacity) {\n  return (blendDifference(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendDarken(float base, float blend) { return min(blend, base); }\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n  return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g),\n              blendDarken(base.b, blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n  return (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorDodge(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n  return vec3(blendColorDodge(base.r, blend.r),\n              blendColorDodge(base.g, blend.g),\n              blendColorDodge(base.b, blend.b));\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorBurn(float base, float blend) {\n  return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n  return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g),\n              blendColorBurn(base.b, blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendAdd(float base, float blend) { return min(base + blend, 1.0); }\n\nvec3 blendAdd(vec3 base, vec3 blend) { return min(base + blend, vec3(1.0)); }\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n  return (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearDodge(float base, float blend) {\n  // Note : Same implementation as BlendAddf\n  return min(base + blend, 1.0);\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendAdd\n  return min(base + blend, vec3(1.0));\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendHardLight(vec3 base, vec3 blend) { return blendOverlay(blend, base); }\n\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n  return (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendGlow(vec3 base, vec3 blend) { return blendReflect(blend, base); }\n\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\n  return (blendGlow(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendVividLight(float base, float blend) {\n  return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend))\n                       : blendColorDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n  return vec3(blendVividLight(base.r, blend.r),\n              blendVividLight(base.g, blend.g),\n              blendVividLight(base.b, blend.b));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n  return (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendHardMix(float base, float blend) {\n  return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend) {\n  return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g),\n              blendHardMix(base.b, blend.b));\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend, float opacity) {\n  return (blendHardMix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearLight(float base, float blend) {\n  return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend))\n                     : blendLinearDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend) {\n  return vec3(blendLinearLight(base.r, blend.r),\n              blendLinearLight(base.g, blend.g),\n              blendLinearLight(base.b, blend.b));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendPinLight(float base, float blend) {\n  return (blend < 0.5) ? blendDarken(base, (2.0 * blend))\n                       : blendLighten(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend) {\n  return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g),\n              blendPinLight(base.b, blend.b));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend, float opacity) {\n  return (blendPinLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend) {\n  if (mode == 1) {\n    return blendAdd(base, blend);\n  } else if (mode == 2) {\n    return blendAverage(base, blend);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend);\n  } else if (mode == 5) {\n    return blendDarken(base, blend);\n  } else if (mode == 6) {\n    return blendDifference(base, blend);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend);\n  } else if (mode == 8) {\n    return blendGlow(base, blend);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend);\n  } else if (mode == 11) {\n    return blendLighten(base, blend);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend);\n  } else if (mode == 16) {\n    return blendNegation(base, blend);\n  } else if (mode == 17) {\n    return blendNormal(base, blend);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend);\n  } else if (mode == 21) {\n    return blendReflect(base, blend);\n  } else if (mode == 22) {\n    return blendScreen(base, blend);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend);\n  }\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend, float opacity) {\n  if (mode == 1) {\n    return blendAdd(base, blend, opacity);\n  } else if (mode == 2) {\n    return blendAverage(base, blend, opacity);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend, opacity);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend, opacity);\n  } else if (mode == 5) {\n    return blendDarken(base, blend, opacity);\n  } else if (mode == 6) {\n    return blendDifference(base, blend, opacity);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend, opacity);\n  } else if (mode == 8) {\n    return blendGlow(base, blend, opacity);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend, opacity);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend, opacity);\n  } else if (mode == 11) {\n    return blendLighten(base, blend, opacity);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend, opacity);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend, opacity);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend, opacity);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend, opacity);\n  } else if (mode == 16) {\n    return blendNegation(base, blend, opacity);\n  } else if (mode == 17) {\n    return blendNormal(base, blend, opacity);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend, opacity);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend, opacity);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend, opacity);\n  } else if (mode == 21) {\n    return blendReflect(base, blend, opacity);\n  } else if (mode == 22) {\n    return blendScreen(base, blend, opacity);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend, opacity);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend, opacity);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend, opacity);\n  }\n}\n\nvoid main()\t{\n  gl_FragColor.rgb = \n    blendMode(mode1, alpha1 * IMG_THIS_NORM_PIXEL(t1).rgb * IMG_THIS_NORM_PIXEL(t1).a,\n    blendMode(mode2, alpha2 * IMG_THIS_NORM_PIXEL(t2).rgb * IMG_THIS_NORM_PIXEL(t2).a,\n    blendMode(mode3, alpha3 * IMG_THIS_NORM_PIXEL(t3).rgb * IMG_THIS_NORM_PIXEL(t3).a,\n    blendMode(mode4, alpha4 * IMG_THIS_NORM_PIXEL(t4).rgb * IMG_THIS_NORM_PIXEL(t4).a,\n    blendMode(mode5, alpha5 * IMG_THIS_NORM_PIXEL(t5).rgb * IMG_THIS_NORM_PIXEL(t5).a,\n    blendMode(mode6, alpha6 * IMG_THIS_NORM_PIXEL(t6).rgb * IMG_THIS_NORM_PIXEL(t6).a,\n    blendMode(mode7, alpha7 * IMG_THIS_NORM_PIXEL(t7).rgb * IMG_THIS_NORM_PIXEL(t7).a,\n                     alpha8 * IMG_THIS_NORM_PIXEL(t8).rgb * IMG_THIS_NORM_PIXEL(t8).a)))))));\n\n  gl_FragColor.a = 1.0; \n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":2,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":3,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":4,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":5,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":6,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":7,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"alpha1","Exposed":"alpha1","Value":{"Float":0.982758641242981},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"alpha2","Exposed":"alpha2","Address":"BCF2000:/1/control/1","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"alpha3","Exposed":"alpha3","Address":"BCF2000:/1/control/2","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"alpha4","Exposed":"alpha4","Address":"BCF2000:/1/control/3","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"alpha5","Exposed":"alpha5","Address":"BCF2000:/1/control/4","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"alpha6","Exposed":"alpha6","Address":"BCF2000:/1/control/5","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"alpha7","Exposed":"alpha7","Address":"BCF2000:/1/control/6","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"alpha8","Exposed":"alpha8","Address":"BCF2000:/1/control/7","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"mode1","Exposed":"mode1","Value":{"Int":15},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":17,"Hidden":true,"Custom":"mode2","Exposed":"mode2","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":18,"Hidden":true,"Custom":"mode3","Exposed":"mode3","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":19,"Hidden":true,"Custom":"mode4","Exposed":"mode4","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":20,"Hidden":true,"Custom":"mode5","Exposed":"mode5","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":21,"Hidden":true,"Custom":"mode6","Exposed":"mode6","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":22,"Hidden":true,"Custom":"mode7","Exposed":"mode7","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false,"Address":"Window:/"}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":34,"Metadata":{"ScriptingName":"GOTO10","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[193.90992628260125,145.69866366678025],"Size":[115.6875,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"// SaturdayShader Week 15 : GOTO 10\n// by Joseph Fiola (http://www.joefiola.com)\n// 2015-11-28\n// Based on Patricio Gonzalez Vivo's \"GOTO 10 Maze\" example on http://patriciogonzalezvivo.com/2015/thebookofshaders/10/ @patriciogv ( patriciogonzalezvivo.com ) - 2015\n\n\n/*{\n  \"CREDIT\": \"Joseph Fiola\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\": [\n    \"Generator\"\n  ],\n  \"INPUTS\": [\n    {\n      \"NAME\": \"pos\",\n      \"TYPE\": \"point2D\",\n      \"DEFAULT\": [\n        0.5,\n        0.5\n      ],\n      \"MIN\": [\n        0,\n        0\n      ],\n      \"MAX\": [\n        1,\n        1\n      ]\n    },\n    {\n      \"NAME\": \"invert\",\n      \"TYPE\": \"bool\",\n      \"DEFAULT\": 0\n    },\n    {\n      \"NAME\": \"pattern\",\n      \"TYPE\": \"long\",\n      \"VALUES\": [\n        0,\n        1,\n        2\n      ],\n      \"LABELS\": [\n        \"Maze\",\n        \"Circle\",\n        \"Both\"\n      ],\n      \"DEFAULT\": 0\n    },\n    {\n      \"NAME\": \"zoom\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 30,\n      \"MIN\": 1.0,\n      \"MAX\": 100.0\n    },\n    {\n      \"NAME\": \"gradient\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.2,\n      \"MIN\": 0.01,\n      \"MAX\": 2\n    },\n    {\n      \"NAME\": \"gradientOffset\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": -1,\n      \"MAX\": 1\n    },\n    {\n      \"NAME\": \"truchetPositionOffset\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 1,\n      \"MIN\": 0.0001,\n      \"MAX\": 2\n    },\n    {\n      \"NAME\": \"truchetIndex\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 2,\n      \"MIN\": 0,\n      \"MAX\": 4\n    },\n    {\n      \"NAME\": \"contrast\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": 0,\n      \"MAX\": 0.5\n    },\n    {\n      \"NAME\": \"contrastShift\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": -0.5,\n      \"MAX\": 0.5\n    },\n    {\n      \"NAME\": \"randomXspeed\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.01,\n      \"MIN\": -5,\n      \"MAX\": 5\n    },\n    {\n      \"NAME\": \"randomYspeed\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.011,\n      \"MIN\": -5,\n      \"MAX\": 5\n    }\n  ]\n}*/\n\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265358979323846\n\n\nfloat random (in vec2 _st) { \n    return fract(sin(dot(_st.xy,\n                         vec2((TIME*randomXspeed),(TIME*randomYspeed)))));\n}\n\nvec2 truchetPattern(in vec2 _st, in float _index){\n    _index = fract(((_index-0.5)*truchetIndex));\n    if (_index > 0.75*truchetIndex) {\n        _st = vec2(truchetPositionOffset) - _st;\n    } else if (_index > 0.5 * truchetIndex) {\n        _st = vec2(truchetPositionOffset-_st.x,_st.y);\n    } else if (_index > 0.25 * truchetIndex) {\n        _st = 1.-vec2(truchetPositionOffset-_st.x,_st.y);\n    } else if (_index >= 0.0) {\n    \t_st += truchetPositionOffset;\n    }\n    return _st;\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/RENDERSIZE.xy;\n    st -= vec2(pos);\n\tst.x *= RENDERSIZE.x/RENDERSIZE.y; // 1:1 ratio\n    \n    st *= zoom;\n\n    vec2 ipos = floor(st);  // integer\n    vec2 fpos = fract(st);  // fraction\n\n    vec2 tile = truchetPattern(fpos, random( ipos ));\n\n    float color = 0.0;\n\n    // Maze\n    if (pattern == 0 || pattern == 2){\n    color += smoothstep(tile.x-gradient+gradientOffset,tile.x,tile.y)-\n            smoothstep(tile.x,tile.x+gradient+gradientOffset,tile.y);\n    }\n\n    // Circles\n    if (pattern == 1 || pattern == 2){\n     color += (step(length(tile),0.6) -\n             step(length(tile),0.4) ) +\n             (step(length(tile-vec2(1.)),0.6) -\n              step(length(tile-vec2(1.)),0.4) );\n    }\n    \n    //adjust contrast\n\tcolor += smoothstep(0.0+contrast+contrastShift,1.0-contrast+contrastShift, color);\n\t\n\t//invert colors\n\tif (invert) color = color *-1.0 + 1.0;\n\n    gl_FragColor = vec4(vec3(color),1.0);\n}\n\n\n\n","Inlets":[{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"pos","Exposed":"pos","Value":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"invert","Exposed":"invert","Value":{"Bool":true},"Domain":{"Bool":null}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"pattern","Exposed":"pattern","Value":{"Int":0},"Domain":{"Int":{"Values":[0,1,2]}},"Values":[["Maze",{"Int":0}],["Circle",{"Int":1}],["Both",{"Int":2}]]},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"zoom","Exposed":"zoom","Value":{"Float":7.0},"Domain":{"Float":{"Min":1.0,"Max":100.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"gradient","Exposed":"gradient","Value":{"Float":0.20000000298023224},"Domain":{"Float":{"Min":0.009999999776482582,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"gradientOffset","Exposed":"gradientoffset","Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"truchetPositionOffset","Exposed":"truchetpositionoffset","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.00009999999747378752,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"truchetIndex","Exposed":"truchetindex","Value":{"Float":2.0},"Domain":{"Float":{"Min":0.0,"Max":4.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"contrast","Exposed":"contrast","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":0.5}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"contrastShift","Exposed":"contrastshift","Value":{"Float":0.0},"Domain":{"Float":{"Min":-0.5,"Max":0.5}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"randomXspeed","Exposed":"randomxspeed","Value":{"Float":0.009999999776482582},"Domain":{"Float":{"Min":-5.0,"Max":5.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"randomYspeed","Exposed":"randomyspeed","Value":{"Float":0.010999999940395355},"Domain":{"Float":{"Min":-5.0,"Max":5.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":29,"Metadata":{"ScriptingName":"WorkinOnTheBlockChainGang","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-584.5497669646809,256.1100481970851],"Size":[219.40625,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n  \"CREDIT\": \"by mojovideotech\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\": [\n    \"generator\"\n  ],\n  \"INPUTS\": [\n    {\n      \"NAME\": \"sizeX\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 300,\n      \"MIN\": 6,\n      \"MAX\": 600\n    },\n    {\n      \"NAME\": \"sizeY\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 10,\n      \"MIN\": 6,\n      \"MAX\": 600\n    },\n    {\n      \"NAME\": \"rate\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 2.5,\n      \"MIN\": 0.1,\n      \"MAX\": 5\n    },\n    {\n      \"NAME\": \"hue\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": -0.9,\n      \"MAX\": 0.9\n    },\n    {\n      \"NAME\": \"colorcycle\",\n      \"TYPE\": \"point2D\",\n      \"DEFAULT\": [ 0.2, 0.8 ],\n      \"MAX\": [ 1, 1 ],\n      \"MIN\": [ 0.1, 0.1 ]\n    }\n  ]\n}*/\n\n////////////////////////////////////////////////////////////\n// WorkinOnTheBlockChainGang  by mojovideotech\n//\n// mod of :\n// glslsandbox.com/\\e#30939.0\n//\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n////////////////////////////////////////////////////////////\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define sizeXY vec2(sizeX,sizeY)\n\nfloat ranomize(vec2 coords) {\n\t\tfloat a = 1.282427, b = 41.49865, c = 57721.56649;\n    \tfloat dt = dot(coords.xy ,vec2(a,b));\n    \tfloat sn = mod(dt,2.685452);\n    \treturn fract(sin(sn) * c);\n}\n\nvec3 getColor(vec2 coords) {\n\tcoords.x = coords.x-mod(coords.x, sizeX);\n\tcoords.y = coords.y-mod(coords.y, sizeY);\n\tfloat r = ranomize(coords.xx*colorcycle);\n\tfloat g = ranomize(coords.yy/colorcycle);\n\tfloat b = ranomize(vec2(r,g));\n\treturn vec3(r-hue,g,b+hue);\n}\n\nfloat triangleWave(float x) {\n\tx = mod(x,2.0);\n\tif (x > 1.0) x = -x+2.0;\n\treturn x;\n}\n\nbool inSize(vec2 coords) {\n\tvec2 box = coords.xy-mod(coords.xy, sizeXY);\n\tvec2 center = box+(sizeXY*0.5);\n\tfloat tsize = (triangleWave((TIME * rate)+(ranomize(box*box)*2.0))/2.0)*max(sizeX,sizeY);\n\treturn (abs(coords.x-center.x) < tsize && abs(coords.y-center.y) < tsize);\n}\n\nvoid main( void ) {\n\tvec3 color;\n\tif (inSize(gl_FragCoord.xy)) color += getColor(gl_FragCoord.xy);\n\tgl_FragColor = vec4( color, 1.0 );\n}","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"sizeX","Exposed":"sizex","Value":{"Float":510.9000244140625},"Domain":{"Float":{"Min":6.0,"Max":600.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"sizeY","Exposed":"sizey","Value":{"Float":85.20000457763672},"Domain":{"Float":{"Min":6.0,"Max":600.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"rate","Exposed":"rate","Value":{"Float":0.9166667461395264},"Domain":{"Float":{"Min":0.10000000149011612,"Max":5.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"hue","Exposed":"hue","Value":{"Float":0.0},"Domain":{"Float":{"Min":-0.8999999761581421,"Max":0.8999999761581421}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"colorcycle","Exposed":"colorcycle","Value":{"Vec2f":[0.20000000298023224,0.800000011920929]},"Domain":{"Vec2f":{"Min":[0.10000000149011612,0.10000000149011612],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":28,"Metadata":{"ScriptingName":"RainbowRingCubicTwist","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-588.5497669646809,312.1100481970851],"Size":[180.46875,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n  \"CREDIT\": \"by mojovideotech\",\n  \"CATEGORIES\": [\n    \"generator\",\n    \"rainbow\",\n    \"circular\",\n    \"rotation\"\n  ],\n  \"DESCRIPTION\": \"\",\n  \"ISFVSN\" : \"2\",\n    \"INPUTS\": [\n    {\n        \"NAME\" :    \"scale\",\n        \"TYPE\" :    \"float\",\n        \"DEFAULT\" : 1.0,\n        \"MIN\" :     0.1,\n        \"MAX\" :     2.0\n    },\n    {\n        \"NAME\" :    \"thickness\",\n        \"TYPE\" :    \"float\",\n        \"DEFAULT\" : 1.75,\n        \"MIN\" :     0.5,\n        \"MAX\" :     2.0\n    },\n    {\n        \"NAME\" :    \"twists\",\n        \"TYPE\" :    \"float\",\n        \"DEFAULT\" : 1.0,\n        \"MIN\" :     1.0,\n        \"MAX\" :     5.0\n    },\n    {\n        \"NAME\" :    \"rate\",\n        \"TYPE\" :    \"float\",\n        \"DEFAULT\" : 1.5,\n        \"MIN\" :     -2.0,\n        \"MAX\" :     2.0\n    },\n    {\n        \"NAME\" :    \"gamma\",\n        \"TYPE\" :    \"float\",\n        \"DEFAULT\" : 0.454545,\n        \"MIN\" :     0.25,\n        \"MAX\" :     1.0\n    }\n    ]\n}\n\n*/\n\n////////////////////////////////////////////////////////////\n// RainbowRingCubicTwist  by mojovideotech\n//\n// based on :\n// glslsandbox/e#58416.0\n//\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n////////////////////////////////////////////////////////////\n\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n\nvoid main() \n{\n    float T = TIME * rate;\n    vec2 R = RENDERSIZE;  \n    vec2 P = (gl_FragCoord.xy - 0.5*R)*(2.1 - scale);\n    vec4 S, E, F;\n    P = vec2(length(P) / R.y - 0.333, atan(P.y,P.x));  \n    P *= vec2(2.6 - thickness,floor(twists));                                                                                                             ;\n    S = 0.08*cos(1.5*vec4(0.0, 1.0, 2.0, 3.0) + T + P.y + sin(P.y)*cos(T));\n    E = S.yzwx; \n    F = max(P.x - S, E - P.x);\n    gl_FragColor = pow(dot(clamp(F*R.y, 0.0, 1.0), 72.0*(S - E))*(S - 0.1), vec4(gamma));\n}","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"scale","Exposed":"scale","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.10000000149011612,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"thickness","Exposed":"thickness","Value":{"Float":1.75},"Domain":{"Float":{"Min":0.5,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"twists","Exposed":"twists","Value":{"Float":1.9425287246704102},"Domain":{"Float":{"Min":1.0,"Max":5.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"rate","Exposed":"rate","Value":{"Float":0.18390798568725586},"Domain":{"Float":{"Min":-2.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"gamma","Exposed":"gamma","Value":{"Float":0.25},"Domain":{"Float":{"Min":0.25,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"d2a67bd8-5d3f-404e-b6e9-e350cf2a833f","ObjectName":"Automation","id":25,"Metadata":{"ScriptingName":"Automation (float).26","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-455.5497669646809,-204.88995180291488],"Size":[200.0,100.0],"Loops":false,"Outlet":{"uuid":"047e4cc2-4d99-4e8b-bf98-206018d02274","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out","MinInlet":{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Control","Exposed":"control","Value":{"Float":0.0},"Domain":{}},"MaxInlet":{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":false,"Custom":"Control","Exposed":"control","Value":{"Float":1.0},"Domain":{}}},"Curve":{"ObjectName":"CurveModel","id":45345,"Segments":[{"uuid":"1e7cb83f-4e47-4b14-814d-2242a9c75991","ObjectName":"CurveSegmentModel","id":1,"Previous":null,"Following":null,"Start":[0.0,0.0],"End":[1.0,1.0],"Power":1.0}]},"Tween":false},{"uuid":"d2a67bd8-5d3f-404e-b6e9-e350cf2a833f","ObjectName":"Automation","id":24,"Metadata":{"ScriptingName":"Automation (float)","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-462.5497669646809,-219.88995180291488],"Size":[200.0,100.0],"Loops":false,"Outlet":{"uuid":"047e4cc2-4d99-4e8b-bf98-206018d02274","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out","MinInlet":{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Control","Exposed":"control","Value":{"Float":0.0},"Domain":{}},"MaxInlet":{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":false,"Custom":"Control","Exposed":"control","Value":{"Float":1.0},"Domain":{}}},"Curve":{"ObjectName":"CurveModel","id":45345,"Segments":[{"uuid":"1e7cb83f-4e47-4b14-814d-2242a9c75991","ObjectName":"CurveSegmentModel","id":1,"Previous":null,"Following":null,"Start":[0.0,0.0],"End":[1.0,1.0],"Power":1.0}]},"Tween":false},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":20,"Metadata":{"ScriptingName":"AnotherGridThingy","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-833.865494883793,-12.684261725199235],"Size":[152.25,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n  \"CREDIT\": \"by mojovideotech\",\n  \"CATEGORIES\": [\n    \"generator\"\n  ],\n  \"INPUTS\": [\n    {\n      \"NAME\": \"grid_size\",\n      \"TYPE\": \"point2D\",\n      \"DEFAULT\": [\n        40,\n        40\n      ],\n      \"MAX\": [\n        360,\n        360\n      ],\n      \"MIN\": [\n        6,\n        6\n      ]\n    },\n    {\n      \"NAME\": \"bright\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.2,\n      \"MIN\": 0.1,\n      \"MAX\": 0.5\n    },\n    {\n      \"NAME\": \"glow_size\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 2,\n      \"MIN\": -20,\n      \"MAX\": 20\n    },\n    {\n      \"NAME\": \"rate\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.16,\n      \"MIN\": -2,\n      \"MAX\": 2\n    },\n    {\n      \"NAME\": \"rndseed\",\n      \"TYPE\": \"point2D\",\n      \"DEFAULT\": [\n        12.9898,\n        78.233\n      ],\n      \"MAX\": [\n        233,\n        377\n      ],\n      \"MIN\": [\n        5,\n        7\n      ]\n    }\n  ],\n  \"DESCRIPTION\": \"\"\n}*/\n \n \n////////////////////////////////////////////////////////////\n// AnotherGridThingy  by mojovideotech\n//\n// based on :\n// glslsandbox/e#22020.0\n//\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n////////////////////////////////////////////////////////////\n\n\n\nfloat rnd(vec2 seed) {\n\tfloat value = fract(sin(dot(seed,vec2(rndseed)))*43758.5453);\n\treturn value;\n}\n\nfloat step_to(float value, float steps) {\n\tfloat closest_int = floor(value/steps);\n\treturn closest_int * steps;\n}\n\nvec4 dot_grid(vec2 pos, bool with_grid) {\n\tfloat value = floor(mod(pos.x,grid_size.x))*floor(mod(pos.y,grid_size.y));\t\t\n\tvalue = clamp(value, 0.0, 1.0);\n\tfloat c_time = TIME*rate;\n\tvec2 step_pos = vec2(step_to(pos.x,grid_size.x),step_to(pos.y,grid_size.y));\n\tvec2 norm_pos = step_pos.xy/RENDERSIZE.xy;\n\tnorm_pos = vec2(norm_pos.x+rnd(norm_pos),norm_pos.y+rnd(norm_pos ));\n\tfloat r = fract(sin(norm_pos.x));\n\tfloat g = fract(sin(norm_pos.y+abs(c_time)));\n\tfloat b = abs(r-g);\n\tif(with_grid == false){value = 1.0;}\n\treturn vec4(r,g,b,1.0) * value;\n}\n\nvec4 glow(vec2 pos) {\n\tvec4 color = clamp(dot_grid(pos,true)*bright,0.0,1.0);\n\tcolor += clamp(dot_grid(vec2(pos.x-glow_size,pos.y),false)*bright,0.0,1.0);\n\tcolor += clamp(dot_grid(vec2(pos.x+glow_size,pos.y),false)*bright,0.0,1.0);\n\tcolor += clamp(dot_grid(vec2(pos.x,pos.y-glow_size),false)*bright,0.0,1.0);\n\tcolor += clamp(dot_grid(vec2(pos.x,pos.y+glow_size),false)*bright,0.0,1.0);\n\treturn color;\n}\n\nvoid main( void ) \n{\n\tvec2 position = gl_FragCoord.xy;\n\tgl_FragColor = glow(position);\n}","Inlets":[{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"grid_size","Exposed":"grid_size","Value":{"Vec2f":[40.0,40.0]},"Domain":{"Vec2f":{"Min":[6.0,6.0],"Max":[360.0,360.0],"Values":[[],[]]}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"bright","Exposed":"bright","Value":{"Float":0.24961832165718079},"Domain":{"Float":{"Min":0.10000000149011612,"Max":0.5}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"glow_size","Exposed":"glow_size","Value":{"Float":-7.786259651184082},"Domain":{"Float":{"Min":-20.0,"Max":20.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"rate","Exposed":"rate","Value":{"Float":-0.9618320465087891},"Domain":{"Float":{"Min":-2.0,"Max":2.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"rndseed","Exposed":"rndseed","Value":{"Vec2f":[12.989800453186035,78.23300170898438]},"Domain":{"Vec2f":{"Min":[5.0,7.0],"Max":[233.0,377.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"d2a67bd8-5d3f-404e-b6e9-e350cf2a833f","ObjectName":"Automation","id":13,"Metadata":{"ScriptingName":"Automation (float).13","Comment":"","Color":"Transparent1","Label":"","Touched":false},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":14817600000,"Pos":[40.0,40.0],"Size":[200.0,100.0],"Loops":false,"Outlet":{"uuid":"047e4cc2-4d99-4e8b-bf98-206018d02274","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out","MinInlet":{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Control","Exposed":"control","Value":{"Float":-1.0},"Domain":{}},"MaxInlet":{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":false,"Custom":"Control","Exposed":"control","Value":{"Float":1.0},"Domain":{}}},"Curve":{"ObjectName":"CurveModel","id":45345,"Segments":[{"uuid":"1e7cb83f-4e47-4b14-814d-2242a9c75991","ObjectName":"CurveSegmentModel","id":-1866214344,"Previous":null,"Following":-1332119325,"Start":[0.0,0.17751479148864746],"End":[0.0709921798631476,0.425],"Power":1.0},{"uuid":"1e7cb83f-4e47-4b14-814d-2242a9c75991","ObjectName":"CurveSegmentModel","id":-1332119325,"Previous":-1866214344,"Following":0,"Start":[0.0709921798631476,0.425],"End":[0.20656158357771265,0.43500000000000005],"Power":1.0},{"uuid":"1e7cb83f-4e47-4b14-814d-2242a9c75991","ObjectName":"CurveSegmentModel","id":0,"Previous":-1332119325,"Following":null,"Start":[0.20656158357771265,0.43500000000000005],"End":[0.31818181818181807,0.17751479148864746],"Power":1.0}]},"Tween":true},{"uuid":"9906e563-ddeb-4ecd-908c-952baee2a0a5","ObjectName":"Process::ProcessModel","id":18,"Metadata":{"ScriptingName":"Signal display","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[516.6895066499624,-286.046507833388],"Size":[200.0,100.0],"Loops":false,"Inlets":[{"uuid":"769dd38a-bfb3-4dc6-b52a-b6abb7afe2a3","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"in","Exposed":"in"}],"Outlets":[{"uuid":"3620ea94-5991-41cf-89b3-11f842cc39d0","ObjectName":"Outlet","id":0,"Hidden":true,"Custom":"Control out","Exposed":"control out","Value":{},"Domain":{}}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":11,"Metadata":{"ScriptingName":"Liquid Warp","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":14817600000,"Pos":[-576.4752810630337,-67.5936288751088],"Size":[106.734375,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n\t\"DESCRIPTION\": \"Your shader description\",\n\t\"CREDIT\": \"by you\",\n\t\"CATEGORIES\": [\n\t\t\"Your category\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"iChannel0\",\n\t\t\t\"TYPE\": \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"SCALE\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 4.0,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 10.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"WARP1\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 3.0,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 10.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"WARP2\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 3.0,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 10.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"JITTER\",\n\t\t\t\"TYPE\": \"bool\",\n\t\t\t\"DEFAULT\": 1.0\n\t\t}\n      \t]\n}*/\n\nvec3 iResolution = vec3(RENDERSIZE, 1.);\nfloat iGlobalTime = TIME;\n\n/*\n\tBumped Sinusoidal Warp\n\t----------------------\n\t\n\thttps://www.shadertoy.com/view/4l2XWK#\n\n\tSinusoidal planar deformation, or the 2D sine warp effect to people \n\tlike me. The effect has been around for years, and there are\n\tcountless examples on the net. IQ's \"Sculpture III\" is basically a \n\tmuch more sophisticated, spherical variation.\n\n    This particular version was modified from Fabrice's \"Plop 2,\" which in \n\tturn was a simplified version of Fantomas's \"Plop.\" I simply reduced \n\tthe frequency and iteration count in order to make it less busy.\n\n\tI also threw in a texture, added point-lit bump mapping, speckles... \n\tand that's pretty much it. As for why a metallic surface would be \n\tdefying\tthe laws of physics and moving like this is anyone's guess. :)\n\n\tBy the way, I have a 3D version, similar to this, that I'll put up at \n\ta later date.\n\n\n\tRelated examples:\n\n    Fantomas - Plop\n    https://www.shadertoy.com/view/ltSSDV\n\n    Fabrice - Plop 2\n    https://www.shadertoy.com/view/MlSSDV\n\n\tIQ - Sculpture III (loosely related)\n\thttps://www.shadertoy.com/view/XtjSDK\n\n\tShane - Lit Sine Warp (far less code)\n\thttps://www.shadertoy.com/view/Ml2XDV\n\n*/\n\n\n// Warp function. Variations have been around for years. This is\n// almost the same as Fabrice's version:\n// Fabrice - Plop 2\n// https://www.shadertoy.com/view/MlSSDV\nvec2 W(vec2 p){\n    \n    p = (p+3.)*SCALE;\n\n    float t = iGlobalTime/2.;\n\n    // Layered, sinusoidal feedback, with time component.\n    for (int i=0; i<5; i++){\n        p += cos( p.yx*3. + vec2(t,SCALE))/WARP1;\n        p += sin( p.yx + t + vec2(SCALE,0))/WARP2;\n        p *= 1.3;\n    }\n\n    // A bit of jitter to counter the high frequency sections.\n    if (JITTER) {\n    p +=  fract(sin(p+vec2(13, 7))*5e5)*.03-.015;\n\t\t\t\t}\n    return mod(p,2.)-1.; // Range: [vec2(-1), vec2(1)]\n    \n}\n\n// Bump mapping function. Put whatever you want here. In this case, \n// we're returning the length of the sinusoidal warp function.\nfloat bumpFunc(vec2 p){ \n\n\treturn length(W(p))*.7071; // Range: [0, 1]\n\n}\n\n/*\n// Standard ray-plane intersection.\nvec3 rayPlane(vec3 p, vec3 o, vec3 n, vec3 rd) {\n    \n    float dn = dot(rd, n);\n\n    float s = 1e8;\n    \n    if (abs(dn) > 0.0001) {\n        s = dot(p-o, n) / dn;\n        s += float(s < 0.0) * 1e8;\n    }\n    \n    return o + s*rd;\n}\n*/\n\n//vec3 smoothFract(vec3 x){ x = fract(x); return min(x, x*(1.-x)*12.); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    // Screen coordinates.\n\tvec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\n    \n    \n    // PLANE ROTATION\n    //\n    // Rotating the canvas back and forth. I don't feel it adds value, in this case,\n    // but feel free to uncomment it.\n    //float th = sin(iGlobalTime*0.1)*sin(iGlobalTime*0.12)*4.;\n    //float cs = cos(th), si = sin(th);\n    //uv *= mat2(cs, -si, si, cs);\n  \n\n    // VECTOR SETUP - surface postion, ray origin, unit direction vector, and light postion.\n    //\n    // Setup: I find 2D bump mapping more intuitive to pretend I'm raytracing, then lighting a bump mapped plane \n    // situated at the origin. Others may disagree. :)  \n    vec3 sp = vec3(uv, 0); // Surface posion. Hit point, if you prefer. Essentially, a screen at the origin.\n    vec3 rd = normalize(vec3(uv, 1.)); // Unit direction vector. From the origin to the screen plane.\n    vec3 lp = vec3(cos(iGlobalTime)*0.5, sin(iGlobalTime)*0.2, -1.); // Light position - Back from the screen.\n\tvec3 sn = vec3(0., 0., -1); // Plane normal. Z pointing toward the viewer.\n \n     \n/*\n\t// I deliberately left this block in to show that the above is a simplified version\n\t// of a raytraced plane. The \"rayPlane\" equation is commented out above.\n\tvec3 rd = normalize(vec3(uv, 1.));\n\tvec3 ro = vec3(0., 0., -1);\n\n\t// Plane normal.\n\tvec3 sn = normalize(vec3(cos(iGlobalTime)*0.25, sin(iGlobalTime)*0.25, -1));\n    //vec3 sn = normalize(vec3(0., 0., -1));\n\t\n\tvec3 sp = rayPlane(vec3(0., 0., 0.), ro, sn, rd);\n    vec3 lp = vec3(cos(iGlobalTime)*0.5, sin(iGlobalTime)*0.25, -1.); \n*/    \n    \n    \n    // BUMP MAPPING - PERTURBING THE NORMAL\n    //\n    // Setting up the bump mapping variables. Normally, you'd amalgamate a lot of the following,\n    // and roll it into a single function, but I wanted to show the workings.\n    //\n    // f - Function value\n    // fx - Change in \"f\" in in the X-direction.\n    // fy - Change in \"f\" in in the Y-direction.\n    vec2 eps = vec2(4./iResolution.y, 0.);\n    \n    float f = bumpFunc(sp.xy); // Sample value multiplied by the amplitude.\n    float fx = bumpFunc(sp.xy-eps.xy); // Same for the nearby sample in the X-direction.\n    float fy = bumpFunc(sp.xy-eps.yx); // Same for the nearby sample in the Y-direction.\n   \n \t// Controls how much the bump is accentuated.\n\tconst float bumpFactor = 0.05;\n    \n    // Using the above to determine the dx and dy function gradients.\n    fx = (fx-f)/eps.x; // Change in X\n    fy = (fy-f)/eps.x; // Change in Y.\n    // Using the gradient vector, \"vec3(fx, fy, 0),\" to perturb the XY plane normal \",vec3(0, 0, -1).\"\n    // By the way, there's a redundant step I'm skipping in this particular case, on account of the \n    // normal only having a Z-component. Normally, though, you'd need the commented stuff below.\n    //vec3 grad = vec3(fx, fy, 0);\n    //grad -= sn*dot(sn, grad);\n    //sn = normalize( sn + grad*bumpFactor ); \n    sn = normalize( sn + vec3(fx, fy, 0)*bumpFactor );           \n   \n    \n    // LIGHTING\n    //\n\t// Determine the light direction vector, calculate its distance, then normalize it.\n\tvec3 ld = lp - sp;\n\tfloat lDist = max(length(ld), 0.001);\n\tld /= lDist;\n\n    // Light attenuation.    \n    float atten = min(1./(0.25 + lDist*0.5 + lDist*lDist*0.05), 1.);\n\t//float atten = min(1./(lDist*lDist*1.), 1.);\n    \n    // Using the bump function, \"f,\" to darken the crevices. Completely optional, but I\n    // find it gives extra depth.\n    atten *= f*.85 + .15; // Or... f*f*.5 + .5; //  pow(f, .75); // etc.\n\n\t\n\n\t// Diffuse value.\n\tfloat diff = max(dot(sn, ld), 0.);  \n    // Enhancing the diffuse value a bit. Made up.\n    diff = pow(diff, 2.)*0.66 + pow(diff, 4.)*0.34; \n    // Specular highlighting.\n    float spec = pow(max(dot( reflect(-ld, sn), -rd), 0.), 8.); \n\n\t\n    // TEXTURE COLOR\n    //\n\t// Combining the surface postion with a fraction of the warped surface position to index \n    // into the texture. The result is a slightly warped texture, as a opposed to a completely \n    // warped one. By the way, the warp function is called above in the \"bumpFunc\" function,\n    // so it's kind of wasteful doing it again here, but the function is kind of cheap, and\n    // it's more readable this way.\n    vec3 texCol = IMG_NORM_PIXEL(iChannel0, sp.xy + W(sp.xy)/8.).xyz;\n    //\n    /*\n    // Textureless. Simple and elegant... so it clearly didn't come from me. Thanks Fabrice. :)\n    vec3 texCol = smoothFract( W(sp.xy).xyy )*.1 + .4;\n\t*/\n    \n    // FINAL COLOR\n    // Using the values above to produce the final color.   \n    vec3 col = (texCol * (diff*vec3(1, .97, .92)*1.3 + 0.5) + vec3(1., 0.6, .2)*spec*1.3)*atten;\n\n\n    // Done. \n\tfragColor = vec4(min(col, 1.), 1.);\n}\n\nvoid main(void) {\n    mainImage(gl_FragColor, gl_FragCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"SCALE","Exposed":"scale","Value":{"Float":0.9349643588066101},"Domain":{"Float":{"Min":0.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"WARP1","Exposed":"warp1","Value":{"Float":7.052875518798828},"Domain":{"Float":{"Min":0.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"WARP2","Exposed":"warp2","Value":{"Float":3.0},"Domain":{"Float":{"Min":0.0,"Max":10.0}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"JITTER","Exposed":"jitter","Value":{"Bool":false},"Domain":{"Bool":null}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":19,"Metadata":{"ScriptingName":"Video Mixer","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[194.05408364838945,-70.76698043760877],"Size":[108.890625,80.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"General\"\n    ],\n    \"CREDIT\": \"Jamie Owen, Jean-Michaël Celerier\",\n    \"DESCRIPTION\": \"8-channel video mixer\",\n    \"INPUTS\": [\n        { \"NAME\": \"t1\", \"LABEL\" : \"Texture 1\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t2\", \"LABEL\" : \"Texture 2\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t3\", \"LABEL\" : \"Texture 3\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t4\", \"LABEL\" : \"Texture 4\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t5\", \"LABEL\" : \"Texture 5\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t6\", \"LABEL\" : \"Texture 6\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t7\", \"LABEL\" : \"Texture 7\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t8\", \"LABEL\" : \"Texture 8\", \"TYPE\": \"image\" },\n        { \"NAME\": \"alpha1\", \"LABEL\" : \"Alpha 1\", \"DEFAULT\": 1, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha2\", \"LABEL\" : \"Alpha 2\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha3\", \"LABEL\" : \"Alpha 3\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha4\", \"LABEL\" : \"Alpha 4\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha5\", \"LABEL\" : \"Alpha 5\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha6\", \"LABEL\" : \"Alpha 6\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha7\", \"LABEL\" : \"Alpha 7\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha8\", \"LABEL\" : \"Alpha 8\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 1\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode1\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 2\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode2\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 3\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode3\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 4\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode4\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 5\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode5\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 6\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode6\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 7\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode7\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n/* Blend mode implementations courtesy of Jamie Owen:\n\n   https://github.com/jamieowen/glsl-blend\n\nThe MIT License (MIT) Copyright (c) 2015 Jamie Owen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nvec3 blendPhoenix(vec3 base, vec3 blend) {\n  return min(base, blend) - max(base, blend) + vec3(1.0);\n}\n\nvec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {\n  return (blendPhoenix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n  return base < 0.5 ? (2.0 * base * blend)\n                    : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n  return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g),\n              blendOverlay(base.b, blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n  return (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNormal(vec3 base, vec3 blend) { return blend; }\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n  return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNegation(vec3 base, vec3 blend) {\n  return vec3(1.0) - abs(vec3(1.0) - base - blend);\n}\n\nvec3 blendNegation(vec3 base, vec3 blend, float opacity) {\n  return (blendNegation(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend) { return base * blend; }\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n  return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendReflect(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);\n}\n\nvec3 blendReflect(vec3 base, vec3 blend) {\n  return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g),\n              blendReflect(base.b, blend.b));\n}\n\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\n  return (blendReflect(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendAverage(vec3 base, vec3 blend) { return (base + blend) / 2.0; }\n\nvec3 blendAverage(vec3 base, vec3 blend, float opacity) {\n  return (blendAverage(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearBurn(float base, float blend) {\n  // Note : Same implementation as BlendSubtractf\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendSubtract\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLighten(float base, float blend) { return max(blend, base); }\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n  return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g),\n              blendLighten(base.b, blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n  return (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendScreen(float base, float blend) {\n  return 1.0 - ((1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n  return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g),\n              blendScreen(base.b, blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n  return (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSoftLight(float base, float blend) {\n  return (blend < 0.5)\n             ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend))\n             : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend) {\n  return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g),\n              blendSoftLight(base.b, blend.b));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n  return (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSubtract(float base, float blend) {\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend) {\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend, float opacity) {\n  return (blendSubtract(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend) {\n  return base + blend - 2.0 * base * blend;\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend, float opacity) {\n  return (blendExclusion(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendDifference(vec3 base, vec3 blend) { return abs(base - blend); }\n\nvec3 blendDifference(vec3 base, vec3 blend, float opacity) {\n  return (blendDifference(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendDarken(float base, float blend) { return min(blend, base); }\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n  return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g),\n              blendDarken(base.b, blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n  return (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorDodge(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n  return vec3(blendColorDodge(base.r, blend.r),\n              blendColorDodge(base.g, blend.g),\n              blendColorDodge(base.b, blend.b));\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorBurn(float base, float blend) {\n  return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n  return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g),\n              blendColorBurn(base.b, blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendAdd(float base, float blend) { return min(base + blend, 1.0); }\n\nvec3 blendAdd(vec3 base, vec3 blend) { return min(base + blend, vec3(1.0)); }\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n  return (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearDodge(float base, float blend) {\n  // Note : Same implementation as BlendAddf\n  return min(base + blend, 1.0);\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendAdd\n  return min(base + blend, vec3(1.0));\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendHardLight(vec3 base, vec3 blend) { return blendOverlay(blend, base); }\n\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n  return (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendGlow(vec3 base, vec3 blend) { return blendReflect(blend, base); }\n\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\n  return (blendGlow(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendVividLight(float base, float blend) {\n  return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend))\n                       : blendColorDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n  return vec3(blendVividLight(base.r, blend.r),\n              blendVividLight(base.g, blend.g),\n              blendVividLight(base.b, blend.b));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n  return (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendHardMix(float base, float blend) {\n  return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend) {\n  return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g),\n              blendHardMix(base.b, blend.b));\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend, float opacity) {\n  return (blendHardMix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearLight(float base, float blend) {\n  return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend))\n                     : blendLinearDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend) {\n  return vec3(blendLinearLight(base.r, blend.r),\n              blendLinearLight(base.g, blend.g),\n              blendLinearLight(base.b, blend.b));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendPinLight(float base, float blend) {\n  return (blend < 0.5) ? blendDarken(base, (2.0 * blend))\n                       : blendLighten(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend) {\n  return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g),\n              blendPinLight(base.b, blend.b));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend, float opacity) {\n  return (blendPinLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend) {\n  if (mode == 1) {\n    return blendAdd(base, blend);\n  } else if (mode == 2) {\n    return blendAverage(base, blend);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend);\n  } else if (mode == 5) {\n    return blendDarken(base, blend);\n  } else if (mode == 6) {\n    return blendDifference(base, blend);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend);\n  } else if (mode == 8) {\n    return blendGlow(base, blend);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend);\n  } else if (mode == 11) {\n    return blendLighten(base, blend);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend);\n  } else if (mode == 16) {\n    return blendNegation(base, blend);\n  } else if (mode == 17) {\n    return blendNormal(base, blend);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend);\n  } else if (mode == 21) {\n    return blendReflect(base, blend);\n  } else if (mode == 22) {\n    return blendScreen(base, blend);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend);\n  }\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend, float opacity) {\n  if (mode == 1) {\n    return blendAdd(base, blend, opacity);\n  } else if (mode == 2) {\n    return blendAverage(base, blend, opacity);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend, opacity);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend, opacity);\n  } else if (mode == 5) {\n    return blendDarken(base, blend, opacity);\n  } else if (mode == 6) {\n    return blendDifference(base, blend, opacity);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend, opacity);\n  } else if (mode == 8) {\n    return blendGlow(base, blend, opacity);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend, opacity);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend, opacity);\n  } else if (mode == 11) {\n    return blendLighten(base, blend, opacity);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend, opacity);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend, opacity);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend, opacity);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend, opacity);\n  } else if (mode == 16) {\n    return blendNegation(base, blend, opacity);\n  } else if (mode == 17) {\n    return blendNormal(base, blend, opacity);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend, opacity);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend, opacity);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend, opacity);\n  } else if (mode == 21) {\n    return blendReflect(base, blend, opacity);\n  } else if (mode == 22) {\n    return blendScreen(base, blend, opacity);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend, opacity);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend, opacity);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend, opacity);\n  }\n}\n\nvoid main()\t{\n  gl_FragColor.rgb = \n    blendMode(mode1, alpha1 * IMG_THIS_NORM_PIXEL(t1).rgb * IMG_THIS_NORM_PIXEL(t1).a,\n    blendMode(mode2, alpha2 * IMG_THIS_NORM_PIXEL(t2).rgb * IMG_THIS_NORM_PIXEL(t2).a,\n    blendMode(mode3, alpha3 * IMG_THIS_NORM_PIXEL(t3).rgb * IMG_THIS_NORM_PIXEL(t3).a,\n    blendMode(mode4, alpha4 * IMG_THIS_NORM_PIXEL(t4).rgb * IMG_THIS_NORM_PIXEL(t4).a,\n    blendMode(mode5, alpha5 * IMG_THIS_NORM_PIXEL(t5).rgb * IMG_THIS_NORM_PIXEL(t5).a,\n    blendMode(mode6, alpha6 * IMG_THIS_NORM_PIXEL(t6).rgb * IMG_THIS_NORM_PIXEL(t6).a,\n    blendMode(mode7, alpha7 * IMG_THIS_NORM_PIXEL(t7).rgb * IMG_THIS_NORM_PIXEL(t7).a,\n                     alpha8 * IMG_THIS_NORM_PIXEL(t8).rgb * IMG_THIS_NORM_PIXEL(t8).a)))))));\n\n  gl_FragColor.a = 1.0; \n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":2,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":3,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":4,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":5,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":6,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":7,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"alpha1","Exposed":"alpha1","Address":"BCF2000:/1/control/25","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"alpha2","Exposed":"alpha2","Address":"BCF2000:/1/control/26","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"alpha3","Exposed":"alpha3","Address":"BCF2000:/1/control/27","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"alpha4","Exposed":"alpha4","Address":"BCF2000:/1/control/28","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"alpha5","Exposed":"alpha5","Address":"BCF2000:/1/control/29","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"alpha6","Exposed":"alpha6","Address":"BCF2000:/1/control/30","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"alpha7","Exposed":"alpha7","Address":"BCF2000:/1/control/31","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"alpha8","Exposed":"alpha8","Address":"BCF2000:/1/control/32","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"mode1","Exposed":"mode1","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":17,"Hidden":true,"Custom":"mode2","Exposed":"mode2","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":18,"Hidden":true,"Custom":"mode3","Exposed":"mode3","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":19,"Hidden":true,"Custom":"mode4","Exposed":"mode4","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":20,"Hidden":true,"Custom":"mode5","Exposed":"mode5","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":21,"Hidden":true,"Custom":"mode6","Exposed":"mode6","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":22,"Hidden":true,"Custom":"mode7","Exposed":"mode7","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":21,"Metadata":{"ScriptingName":"Kaleidolines ","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-584.9886507250689,47.90342269067321],"Size":[112.59375,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"// SaturdayShader Week 34 : Kaleidolines\n// Joseph Fiola (http://www.joefiola.com)\n// 2016-04-09\n\n// Based on Shadertoy created by Vinicius Graciano Santos - vgs/2014\n// https://www.shadertoy.com/view/lsBSDz\n\n\n/*{\n  \"CREDIT\": \"\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\": [\n    \"Generator\"\n  ],\n  \"INPUTS\": [\n    {\n      \"NAME\": \"invert\",\n      \"TYPE\": \"bool\",\n      \"DEFAULT\": \"1\"\n    },\n    {\n      \"NAME\": \"zoom\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 2,\n      \"MIN\": 0.25,\n      \"MAX\": 20\n    },\n    {\n      \"NAME\": \"rotateCanvas\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": 0,\n      \"MAX\": 1\n    },\n    {\n      \"NAME\": \"rotateLines\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": 0,\n      \"MAX\": 1\n    },\n    {\n      \"NAME\": \"lineThickness\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.5,\n      \"MIN\": 0.1,\n      \"MAX\": 20\n    },\n    {\n      \"NAME\": \"lineLength\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 1,\n      \"MIN\": 0.05,\n      \"MAX\": 10\n    },\n    {\n      \"NAME\": \"lines1\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 10,\n      \"MIN\": 1,\n      \"MAX\": 10\n    },\n    {\n      \"NAME\": \"lines2\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 10,\n      \"MIN\": 1,\n      \"MAX\": 10\n    },\n    {\n      \"NAME\": \"offset\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": -2,\n      \"MAX\": 2\n    },\n    {\n      \"NAME\": \"motion\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.25,\n      \"MIN\": 0,\n      \"MAX\": 1\n    },\n    {\n      \"NAME\": \"pos\",\n      \"TYPE\": \"point2D\",\n      \"DEFAULT\": [\n        0.5,\n        0.5\n      ],\n      \"MIN\": [\n        0,\n        0\n      ],\n      \"MAX\": [\n        1,\n        1\n      ]\n    }\n  ]\n}*/\n\n\n#define TAU 6.28318530718\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec2 tile(vec2 _st, float _zoom){\n  _st *= _zoom;\n  return fract(_st);\n}\n\nfloat segment(vec2 p, vec2 a, vec2 b) {\n    vec2 ab = b - a;\n    vec2 ap = p - a;\n    float k = clamp(dot(ap, ab)/dot(ab, ab), 0.0, lineLength);\n    return smoothstep(0.0, 0.003 + lineThickness/RENDERSIZE.y, length(ap - k*ab) - (0.001 * lineThickness * 5. ));\n}\n\nfloat shape(vec2 p, float angle) {\n    float d = 100.0;\n    vec2 a = vec2(1.0, 0.0), b;\n    vec2 rot = vec2(cos(angle), sin(angle));\n    \n    for (int i = 0; i < 10; ++i) {\n    \t        a = a + offset;\n    \tif (i >= int(lines1)) break;\n        b = a;\n        for (int j = 0; j < 10; ++j) {\n        \tif (j >= int(lines2)) break;\n        \tb = vec2(b.x*rot.x - b.y*rot.y, b.x*rot.y + b.y*rot.x);\n        \tp = rotate2d(rotateLines* -TAU) * p;\n        \td = min(d, segment(p,  a, b));\n        }\n        a = vec2(a.x*rot.x - a.y*rot.y, a.x*rot.y + a.y*rot.x);\n\n    }\n    return d;\n}\n\nvoid main() {\n\n    vec2 uv = gl_FragCoord.xy / RENDERSIZE.xy;\n    uv -= vec2(pos);\n\tuv.x *= RENDERSIZE.x/RENDERSIZE.y;\n\tuv = rotate2d(rotateCanvas *-TAU) * uv;\n\tuv *= zoom;\n        \n    float col = shape(abs(uv), cos((motion * TAU * (TIME*0.05))));\n    \n    if  (invert) col = col *-1.0 + 1.0;\n    \n    gl_FragColor = vec4(vec3(col), 1.0);\n}","Inlets":[{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"invert","Exposed":"invert","Value":{"Bool":true},"Domain":{"Bool":null}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"zoom","Exposed":"zoom","Value":{"Float":1.8958333730697632},"Domain":{"Float":{"Min":0.25,"Max":20.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"rotateCanvas","Exposed":"rotatecanvas","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"rotateLines","Exposed":"rotatelines","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"lineThickness","Exposed":"linethickness","Value":{"Float":0.5},"Domain":{"Float":{"Min":0.10000000149011612,"Max":20.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"lineLength","Exposed":"linelength","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.05000000074505806,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"lines1","Exposed":"lines1","Value":{"Float":10.0},"Domain":{"Float":{"Min":1.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"lines2","Exposed":"lines2","Value":{"Float":10.0},"Domain":{"Float":{"Min":1.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"offset","Exposed":"offset","Value":{"Float":-0.5165562629699707},"Domain":{"Float":{"Min":-2.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"motion","Exposed":"motion","Value":{"Float":0.25},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"pos","Exposed":"pos","Value":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":22,"Metadata":{"ScriptingName":"Aurora","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-583.9886507250689,103.9034226906732],"Size":[75.8125,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*\n\t{\n\t\"DESCRIPTION\": \"Aurora\",\n\t\"CATEGORIES\": \n\t\t[\n\t\t\"generator\"\n\t\t],\n\t\"ISFVSN\": \"2\",\n\t\"CREDIT\": \"ISF Import by: Old Salt\",\n\t\"VSN\": \"1.0\",\n\t\"INPUTS\":\n\t\t[\n\t\t\t{\n\t\t\t\"NAME\": \"uC1\",\n\t\t\t\"TYPE\": \"color\",\n\t\t\t\"DEFAULT\":[0.0,1.0,0.0,1.0]\n\t\t\t},\n\t\t\t{\n\t\t\t\"NAME\": \"uC2\",\n\t\t\t\"TYPE\": \"color\",\n\t\t\t\"DEFAULT\":[0.0,0.0,1.0,1.0]\n\t\t\t},\n\t\t\t{\n\t\t\t\"NAME\": \"uC3\",\n\t\t\t\"TYPE\": \"color\",\n\t\t\t\"DEFAULT\":[1.0,0.0,0.0,1.0]\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Offset: \",\n\t\t\t\"NAME\": \"uOffset\",\n\t\t\t\"TYPE\": \"point2D\",\n\t\t\t\"MAX\": [1.0,1.0],\n\t\t\t\"MIN\": [-1.0,-1.0],\n\t\t\t\"DEFAULT\": [0.0,0.0]\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Zoom: \",\n\t\t\t\"NAME\": \"uZoom\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MAX\": 10.0,\n\t\t\t\"MIN\": 1.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Rotation(or R Speed):\",\n\t\t\t\"NAME\": \"uRotate\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MAX\": 180.0,\n\t\t\t\"MIN\": -180.0,\n\t\t\t\"DEFAULT\": 0.0\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Continuous Rotation? \",\n\t\t\t\"NAME\": \"uContRot\",\n\t\t\t\"TYPE\": \"bool\",\n\t\t\t\"DEFAULT\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Color Mode: \",\n\t\t\t\"LABELS\":\n\t\t\t\t[\n\t\t\t\t\"Shader Defaults \",\n\t\t\t\t\"Alternate Color Palette (3 used) \"\n\t\t\t\t],\n\t\t\t\"NAME\": \"uColMode\",\n\t\t\t\"TYPE\": \"long\",\n\t\t\t\"VALUES\": [0,1],\n\t\t\t\"DEFAULT\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Intensity: \",\n\t\t\t\"NAME\": \"uIntensity\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MAX\": 4.0,\n\t\t\t\"MIN\": 0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t\t}\n\t\t]\n\t}\n*/\n// Import from: http://www.glslsandbox.com/e#58544.0\n\n#define PI 3.141592653589\n#define rotate2D(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n\nvoid main()\n\t{\n\tvec2 uv = gl_FragCoord.xy/RENDERSIZE - 0.5; // normalize coordinates\n\tuv.x *= RENDERSIZE.x/RENDERSIZE.y;          // correct aspect ratio\n\tuv = (uv-uOffset) * 3.0/uZoom;              // offset and zoom functions\n\tuv = uContRot ? uv*rotate2D(TIME*uRotate/36.0) : uv*rotate2D(uRotate*PI/180.0); // rotation\n\n/**** Start of Core Imported Shader Code *****/\n\tvec2 p = uv;\n\tfloat d = 2.*length(p);\n\tvec3 col = vec3(0); \n\tfor (int i = 0; i < 18; i++)\n\t\t{\n\t\tfloat dist = abs(p.y + sin(float(i)+TIME*0.3+3.0*p.x)) - 0.2;\n\t\tif (dist < 1.0) { col += (1.0-pow(abs(dist), 0.28))*vec3(0.8+0.2*sin(TIME),0.9+0.1*sin(TIME*1.1),1.2); }\n\t\tp *= 0.99/d; \n\t\tp *= rotate2D(PI/60.0);  // was: p = rotz(p, 30.0) \n\t\t}\n\tcol *= 0.49 ; \n/****  End of Core Imported Shader Code  *****/\n\n\tvec4 cShad = vec4( col-d-0.4, 1.0);  \n\tvec3 cOut = cShad.rgb;\n\tif (uColMode == 1)\n\t\t{\n\t\tcOut = uC1.rgb * cShad.r;\n\t\tcOut += uC2.rgb * cShad.g;\n\t\tcOut += uC3.rgb * cShad.b;\n\t\t}\n\tcOut = cOut * uIntensity;\n\tcOut = clamp(cOut, vec3(0.0), vec3(1.0));\n\tgl_FragColor = vec4(cOut.rgb,cShad.a);\n\t}\n","Inlets":[{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"uC1","Exposed":"uc1","Value":{"Vec4f":[0.0,1.0,0.0,1.0]},"Domain":{}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"uC2","Exposed":"uc2","Value":{"Vec4f":[0.0,0.0,1.0,1.0]},"Domain":{}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"uC3","Exposed":"uc3","Value":{"Vec4f":[1.0,0.0,0.0,1.0]},"Domain":{}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"uOffset","Exposed":"uoffset","Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[-1.0,-1.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"uZoom","Exposed":"uzoom","Value":{"Float":1.0},"Domain":{"Float":{"Min":1.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"uRotate","Exposed":"urotate","Value":{"Float":0.0},"Domain":{"Float":{"Min":-180.0,"Max":180.0}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"uContRot","Exposed":"ucontrot","Value":{"Bool":false},"Domain":{"Bool":null}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"uColMode","Exposed":"ucolmode","Value":{"Int":0},"Domain":{"Int":{"Values":[0,1]}},"Values":[["Shader Defaults ",{"Int":0}],["Alternate Color Palette (3 used) ",{"Int":1}]]},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"uIntensity","Exposed":"uintensity","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":4.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":23,"Metadata":{"ScriptingName":"BetterBitWheel","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-583.9886507250689,156.9034226906732],"Size":[131.109375,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n\t\"CREDIT\": \"by mojovideotech\",\n\t\"DESCRIPTION\": \"\",\n\t\"CATEGORIES\": [\n\t\t    \"generator\",\n    \t\t\"2d\",\n    \t\t\"rotation\",\n    \t\t\"circular\"\n\t],\n\t\"INPUTS\": [\n\t{\n\t\t\"NAME\" : \t\t\"scale\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t1.5,\n\t\t\"MIN\" : \t\t0.5,\n\t\t\"MAX\" : \t\t3.0\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"rate\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t5.0,\n\t\t\"MIN\" : \t\t-10.0,\n\t\t\"MAX\" : \t\t10.0\n\t},\n\t{\n     \t\"NAME\" :\t\t\"seed1\",\n     \t\"TYPE\" : \t\t\"float\",\n     \t\"DEFAULT\" :\t\t13,\n     \t\"MIN\" : \t\t8,\n     \t\"MAX\" :\t\t\t233\n\t},\n    {\n      \t\"NAME\" :\t\t\"seed2\",\n      \t\"TYPE\" :\t\t\"float\",\n      \t\"DEFAULT\" :\t\t5987,\n      \t\"MIN\" : \t\t1597,\n      \t\"MAX\" :\t\t\t8999\t\n\t},\n    {\n     \t\"NAME\" :\t\t\"seed3\",\n      \t\"TYPE\" :\t\t\"float\",\n     \t\"DEFAULT\" :\t\t75025,\n     \t\"MIN\" :\t\t\t9859,\n     \t\"MAX\" :\t\t\t28657\n    },\n\t{\n\t\t\"NAME\" : \t\t\"loops\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" :\t \t3.0,\n\t\t\"MIN\" : \t\t1.0,\n\t\t\"MAX\" : \t\t60.0\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"thickness\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t0.6,\n\t\t\"MIN\" : \t\t0.5,\n\t\t\"MAX\" : \t\t0.99\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"density\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t0.5,\n\t\t\"MIN\" : \t\t0.001,\n\t\t\"MAX\" : \t\t0.999\n\t},\n\t{\n\t\t\"NAME\" : \t\t\"fade\",\n\t\t\"TYPE\" : \t\t\"float\",\n\t\t\"DEFAULT\" : \t1.5,\n\t\t\"MIN\" : \t\t0.0,\n\t\t\"MAX\" : \t\t3.0\n\t}\n\t]\n}*/\n\n\n///////////////////////////////////////////\n// BetterBitWheel  by mojovideotech\n//\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n///////////////////////////////////////////\n\n#define \tpi\t3.141592653589793\t// pi\n\n\nfloat hash( vec2 h ) {\n    return fract( sin( dot( h.xy, vec2( seed1, seed2 ) ) ) * seed3 );\n}\n\nfloat T = TIME * rate;\nfloat L = floor(loops);\nfloat N = 1.0 - thickness;\n\nvec4 draw( vec2 p ) {\n\tfloat r = length( p ) * RENDERSIZE.y * 0.05;\n\tr /= scale;\n\tfloat layer = floor( r );\n\t\n\tif ( 2.0 < layer ) {\n\t\tfloat theta = ( atan( p.y, p.x ) + pi ) / 2.0 / pi;\n\t\tfloat V = 0.05 * ( hash( vec2( layer, 3.155 ) ) - 0.5 );\n\t\tfloat F = 1.0 + floor( layer * 4.0 * pow( hash( vec2( layer, 2.456 ) ), 2.0 ) );\n\t\t\n\t\tfloat phase = fract( ( theta + T * V ) * L ) * F;\n\t\tfloat phase0 = floor( phase );\n\t\tfloat phase1 = mod( phase0 + 1.0, F );\n\t\tfloat phasec = fract( phase );\n\t\t\n\t\tfloat state0 = hash( vec2( layer, phase0 ) ) < density ? 0.0 : 1.0;\n\t\tfloat state1 = hash( vec2( layer, phase1 ) ) < density ? 0.0 : 1.0;\n\t\tfloat state = mix( state0, state1, smoothstep( 0.0, 0.5 / RENDERSIZE.y * L * F / length( p ), phasec ) );\n\t\t\n\t\tvec3 col = vec3( state );\n\t\t\n\t\tfloat layerc = mod( r, 1.0 );\n\t\tcol *= smoothstep( 0.0, 0.0 + N, layerc );\n\t\tcol *= smoothstep( 0.6, 0.6 - N, layerc );\n\t\t\n\t\tcol *= exp( -fade * length( p ) );\n\t\t\n\t\treturn vec4( col, 1.0 );\n\t} else {\n\t\treturn vec4( 0.0, 0.0, 0.0, 1.0 );\n\t}\n}\n\nvoid main() {\n\tvec2 pos = ( gl_FragCoord.xy * 2.0 - RENDERSIZE.xy ) / RENDERSIZE.y;\n    gl_FragColor = draw( pos );\n}\n\n","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"scale","Exposed":"scale","Value":{"Float":3.0},"Domain":{"Float":{"Min":0.5,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"rate","Exposed":"rate","Value":{"Float":-1.3333330154418945},"Domain":{"Float":{"Min":-10.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"seed1","Exposed":"seed1","Value":{"Float":13.0},"Domain":{"Float":{"Min":8.0,"Max":233.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"seed2","Exposed":"seed2","Value":{"Float":5544.7333984375},"Domain":{"Float":{"Min":1597.0,"Max":8999.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"seed3","Exposed":"seed3","Value":{"Float":75025.0},"Domain":{"Float":{"Min":9859.0,"Max":28657.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"loops","Exposed":"loops","Value":{"Float":16.733333587646484},"Domain":{"Float":{"Min":1.0,"Max":60.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"thickness","Exposed":"thickness","Value":{"Float":0.7204999923706055},"Domain":{"Float":{"Min":0.5,"Max":0.9900000095367432}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"density","Exposed":"density","Value":{"Float":0.5},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":0.9990000128746033}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"fade","Exposed":"fade","Value":{"Float":1.5},"Domain":{"Float":{"Min":0.0,"Max":3.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":30,"Metadata":{"ScriptingName":"Matter","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-584.2525195032889,207.1534169717509],"Size":[200.0,100.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n\t\"CREDIT\": \"by zebox02\",\n\t\"DESCRIPTION\": \"\",\n\t\"CATEGORIES\": [\n\t\t\"\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"scale\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 100.0,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1000.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"amp\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.4,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"r1\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 1.0,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"r2\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.8,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"r3\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.6,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"r4\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.7,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"g1\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.91,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"g2\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.88,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"g3\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.35,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"g4\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.6,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"b1\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.98,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"b2\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.7,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"b3\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.4,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"b4\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.85,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"c_5\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.2,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"c_6\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.9,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t}\n\t]\n}*/\n\nfloat rand(vec2 n) { \n    return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 n) {\n    const vec2 d = vec2(0.0, 1.0);\n    vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n    return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nfloat fbm(vec2 n) {\n    float total = 0.0, amplitude = .9;\n    for (int i = 0; i < 7; i++) {\n        total += sin(noise(n) * amplitude);\n        n += n;\n        amplitude *= .9;\n    }\n    return total;\n}\n\nvoid main() {\n\tfloat t = TIME;\n    vec3 c1 = vec3(r1, g1, b1);\n    vec3 c2 = vec3(r2, g2, b2);\n    vec3 c3 = vec3(r3, g3, b3);\n    vec3 c4 = vec3(r4, g4, b4);\n    vec3 c5 = vec3(c_5);\n    vec3 c6 = vec3(c_6);\n    vec2 p = gl_FragCoord.xy / 100.0;\n    float q = fbm(p - t * 0.1);\n    vec2 r = vec2(fbm(p + q + t - p.x - p.y), fbm(p + q - t * .9));\n    vec3 c = mix(c1, c2, fbm(p + r * t)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n    gl_FragColor = vec4(c, 1.0);\n}","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"scale","Exposed":"scale","Value":{"Float":100.0},"Domain":{"Float":{"Min":0.0,"Max":1000.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"amp","Exposed":"amp","Value":{"Float":0.4000000059604645},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"r1","Exposed":"r1","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"r2","Exposed":"r2","Value":{"Float":0.800000011920929},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"r3","Exposed":"r3","Value":{"Float":0.6000000238418579},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"r4","Exposed":"r4","Value":{"Float":0.699999988079071},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"g1","Exposed":"g1","Value":{"Float":0.9100000262260437},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"g2","Exposed":"g2","Value":{"Float":0.8799999952316284},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"g3","Exposed":"g3","Value":{"Float":0.3499999940395355},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"g4","Exposed":"g4","Value":{"Float":0.6000000238418579},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"b1","Exposed":"b1","Value":{"Float":0.9800000190734863},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"b2","Exposed":"b2","Value":{"Float":0.699999988079071},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"b3","Exposed":"b3","Value":{"Float":0.4000000059604645},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"b4","Exposed":"b4","Value":{"Float":0.8500000238418579},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"c_5","Exposed":"c_5","Value":{"Float":0.20000000298023224},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"c_6","Exposed":"c_6","Value":{"Float":0.8999999761581421},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":31,"Metadata":{"ScriptingName":"UltimateKaliCircuits","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-577.2525195032889,370.15341697175086],"Size":[158.5625,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n  \"CREDIT\": \"by mojovideotech\",\n  \"CATEGORIES\": [\n  \t\"generator\",\n  \t\"circuits\",\n    \"2d\",\n    \"fractal\",\n    \"Kaliset\"\n  ],\n  \"ISFVSN\" : \"2\",\n  \"DESCRIPTION\": \"\",\n  \"INPUTS\": [\n\t{\n\t\t\"NAME\" : \t\"center\",\n\t\t\"TYPE\" : \t\"point2D\",\n\t\t\"DEFAULT\" :\t[ 0.0, 0.0 ],\n\t\t\"MAX\" : \t[ 3.0, 3.0 ],\n     \t\"MIN\" : \t[ -3.0, -3.0 ]\n\t},\n\t{\n\t\t\"NAME\" : \t\"zoom\",\n\t\t\"TYPE\" : \t\"float\",\n\t\t\"DEFAULT\" :\t1.5,\n\t\t\"MIN\" : \t0.5,\n\t\t\"MAX\" : \t3.0\n\t},\n\t{\n\t\t\"NAME\" : \t\"offset\",\n\t\t\"TYPE\" : \t\"float\",\n\t\t\"DEFAULT\" :\t0.05,\n\t\t\"MIN\" : \t0.01,\n\t\t\"MAX\" : \t0.1\n\t},\n\t{\n\t\t\"NAME\" : \t\"glow\",\n\t\t\"TYPE\" : \t\"float\",\n\t\t\"DEFAULT\" :\t3.0,\n\t\t\"MIN\" : \t0.0,\n\t\t\"MAX\" : \t9.0\n\t},\n\t{\n\t\t\"NAME\" : \t\"intensity\",\n\t\t\"TYPE\" : \t\"float\",\n\t\t\"DEFAULT\" : 0.00125,\n\t\t\"MIN\" : \t0.0005,\n\t\t\"MAX\" : \t0.0025\n\t},\n\t{\n\t\t\"NAME\" : \t\"trace\",\n\t\t\"TYPE\" : \t\"float\",\n\t\t\"DEFAULT\" : 40.0,\n\t\t\"MIN\" : \t10.0,\n\t\t\"MAX\" : \t100.0\n\t},\n\t{\n\t\t\"NAME\" : \t\"runtime\",\n\t\t\"TYPE\" : \t\"float\",\n\t\t\"DEFAULT\" : 24.0,\n\t\t\"MIN\" : \t6.0,\n\t\t\"MAX\" : \t60.0\n\t},\n\t{\n\t\t\"NAME\" : \t\"rate\",\n\t\t\"TYPE\" : \t\"float\",\n\t\t\"DEFAULT\" : 0.5,\n\t\t\"MIN\" : \t-2.0,\n\t\t\"MAX\" : \t2.0\n\t}\n  ]\n}\n*/\n\n////////////////////////////////////////////////////////////\n// UltimateKaliCircuits  by mojovideotech\n//\n// based on :\n// shadertoy/XlX3Rj  by Kali\n//\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n////////////////////////////////////////////////////////////\n\n\n\n#define \tpisq  \t9.869604401089359\t// pi squared, pi^2\n#define \ttwpi  \t6.283185307179586  \t// two pi, 2*pi\n#define \tphicu  \t4.236067977499791 \t// phi cubed, phi^3\n#define \tcuphi  \t1.173984996705329   // cube root of phi\n#define \trctwpi  0.159154943091895\t// reciprocal of twpi, 1/twpi      \n#define\t\tr36\t\t0.027777777777778\n\n\nvec3 color = vec3(0.0,0.5,0.0);\nfloat S = glow;\nfloat T = rate*TIME*0.005;\n\nvec2 hash22(vec2 p) { return fract(vec2(21.0, 97.0)*sin(dot(p, vec2(92.0, 61.0)))); }\n\nvoid formula(vec2 z, float f) \n{\n\tfloat m = 0.0; \n\tfloat o, ot2, ot=ot2=10000.0;\n\tfor (int i=0; i<9; i++) {\n\t\tz = abs(z)/clamp(dot(z,z), 0.1, 0.5)-f;\n\t\tfloat l = length(z);\n\t\to = min(max(abs(min(z.x, z.y)),-l+0.25), abs(l-0.25));\n\t\tot = min(ot, o);\n\t\tot2 = min(l*0.1, ot2);\n\t\tm = max(m, float(i)*(1.0-abs(sign(ot-o))));\n\t}\n\tm += 1.0;\n\tfloat w = intensity*m*2.0;\n\tfloat circ = pow(max(0.0,w-ot2)/w,6.0);\n\tS += max(pow(max(0.0,w-ot)/w,0.25),circ);\n\tvec3 col = vec3(hash22(z),f);\n    color += col*(0.4+mod(m/9.0-T*trace+ot2*2.0, 1.0)*1.6);\n\tcolor += vec3(1.0, 0.7, 0.3)*circ*(10.0-m)*3.0\n\t\t\t *smoothstep(0.0, 0.5, vec3(f, isf_FragNormCoord));\n}\n\nvoid main()\n{\n\tvec2 pos = 2.0 * gl_FragCoord.xy - RENDERSIZE.xy;\n\tpos /= max(RENDERSIZE.x,RENDERSIZE.y);\n\tvec2 uv = pos-center;\n\tuv *= 4.0-zoom;\n\tfloat a = T + mod(T, floor(runtime))*cuphi;\n\tfloat b = a*phicu;\n\tuv *= mat2(cos(b),sin(b),-sin(b),cos(b));\n\tuv += vec2(sin(a),cos(a*cuphi))*pisq;\n\tuv *= offset;\n\tfloat pix = cuphi/RENDERSIZE.x*offset;\n\tfloat c = 1.5+mod(floor(T), 16.0)*0.125;\n\tfor (int aa=0; aa<36; aa++) {\n\t\tvec2 aauv = floor(vec2(float(aa)*rctwpi, mod(float(aa), twpi)));\n\t\tformula(uv+aauv*pix, c);\n\t}\n\tS *= r36, color *= r36;\n\tvec3 colo = mix(vec3(0.025), color, S)*(1.5-length(pos)); \t\n\tcolo *= vec3(1.2, 1.1, 1.0);\n\tgl_FragColor = vec4(colo, 1.0);\n}\n\n\n\n","Inlets":[{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"center","Exposed":"center","Value":{"Vec2f":[1.0199999809265137,1.320000171661377]},"Domain":{"Vec2f":{"Min":[-3.0,-3.0],"Max":[3.0,3.0],"Values":[[],[]]}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"zoom","Exposed":"zoom","Value":{"Float":1.1666667461395264},"Domain":{"Float":{"Min":0.5,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"offset","Exposed":"offset","Value":{"Float":0.05000000074505806},"Domain":{"Float":{"Min":0.009999999776482582,"Max":0.10000000149011612}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"glow","Exposed":"glow","Value":{"Float":3.75},"Domain":{"Float":{"Min":0.0,"Max":9.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"intensity","Exposed":"intensity","Value":{"Float":0.0011666666250675917},"Domain":{"Float":{"Min":0.0005000000237487257,"Max":0.0024999999441206455}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"trace","Exposed":"trace","Value":{"Float":55.0},"Domain":{"Float":{"Min":10.0,"Max":100.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"runtime","Exposed":"runtime","Value":{"Float":31.200000762939453},"Domain":{"Float":{"Min":6.0,"Max":60.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"rate","Exposed":"rate","Value":{"Float":1.5999999046325684},"Domain":{"Float":{"Min":-2.0,"Max":2.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":32,"Metadata":{"ScriptingName":"Color Controls","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-359.2525195032889,-264.84658302824914],"Size":[122.953125,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\": \"by zoidberg\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Color Adjustment\", \"Utility\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"bright\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": -1.0,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"contrast\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": -4.0,\n\t\t\t\"MAX\": 4.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"hue\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": -1.0,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"saturation\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 4.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t}\n\t]\n}*/\n\n\nvec3 rgb2hsv(vec3 c)\t{\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\t//vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n\t//vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\t{\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvoid main() {\n\tvec4\t\ttmpColorA = IMG_THIS_PIXEL(inputImage);\n\tvec4\t\ttmpColorB;\n\t//\tbright\n\ttmpColorB = tmpColorA + vec4(bright, bright, bright, 0.0);\n\t//\tcontrast\n\ttmpColorA.rgb = ((vec3(2.0) * (tmpColorB.rgb - vec3(0.5))) * vec3(contrast) / vec3(2.0)) + vec3(0.5);\n\ttmpColorA.a = ((2.0 * (tmpColorB.a - 0.5)) * abs(contrast) / 2.0) + 0.5;\n\n\t//\tconvert RGB to HSV\n\ttmpColorB.xyz = rgb2hsv(clamp(tmpColorA.rgb, 0.0, 1.0));\n\ttmpColorB.a = tmpColorA.a;\n\n\n\t//\thue\n\ttmpColorB.x = mod((tmpColorB.x + hue), 1.0);\n\t//\tsaturation\n\ttmpColorB.y = tmpColorB.y * saturation;\n\n\n\t//\tconvert HSV back to RGB\n\ttmpColorA.rgb = hsv2rgb(clamp(tmpColorB.xyz, 0.0, 1.0));\n\ttmpColorA.a = tmpColorB.a;\n\n\n\tgl_FragColor = clamp(tmpColorA, 0.0, 1.0);\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"bright","Exposed":"bright","Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"contrast","Exposed":"contrast","Value":{"Float":1.0},"Domain":{"Float":{"Min":-4.0,"Max":4.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"hue","Exposed":"hue","Value":{"Float":0.6666666269302368},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"saturation","Exposed":"saturation","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":4.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":33,"Metadata":{"ScriptingName":"Fade","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":46569600000,"Height":300.0,"StartOffset":0,"LoopDuration":46569600000,"Pos":[-137.2525195032889,-236.8465830282491],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"startImage\"\n    },\n    {\n      \"NAME\" : \"endImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"MAX\" : 1,\n      \"TYPE\" : \"float\",\n      \"MIN\" : 0,\n      \"NAME\" : \"progress\",\n      \"DEFAULT\" : 0\n    }\n  ],\n  \"CREDIT\": \"Automatically converted from https://www.github.com/gl-transitions/gl-transitions/tree/master/fade.glsl\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\" : [\n    \"Dissolve\"\n  ],\n  \"ISFVSN\" : \"2\"\n}\n*/\n\n\n\nvec4 getFromColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(startImage, inUV);\n}\nvec4 getToColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(endImage, inUV);\n}\n\n\n\n// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n\n\n\nvoid main()\t{\n\tgl_FragColor = transition(isf_FragNormCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"progress","Exposed":"progress","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]}],"SmallViewRack":[{"Processes":[11,19,20,21,22,23,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45],"Process":null,"Height":864.0,"Nodal":true},{"Processes":[13,18,24,25],"Process":25,"Height":200.0,"Nodal":false}],"FullViewRack":[{"Process":13,"Nodal":false},{"Process":18,"Nodal":false},{"Process":0,"Nodal":true},{"Process":24,"Nodal":false},{"Process":25,"Nodal":false}],"DefaultDuration":46569600000,"MinDuration":46569600000,"MaxDuration":46569600000,"GuiDuration":51226560000,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"Signatures":[],"StartState":2,"EndState":3,"StartDate":0,"HeightPercentage":0.074,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":-1.0,"Center":0,"ViewMode":0,"SmallViewShown":true,"HasSignature":false},{"ObjectName":"Scenario::IntervalModel","id":1,"Metadata":{"ScriptingName":"Interval.gets75","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[],"SmallViewRack":[],"FullViewRack":[],"DefaultDuration":0,"MinDuration":0,"MaxDuration":0,"GuiDuration":776160000,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"Signatures":[],"StartState":1,"EndState":2,"StartDate":0,"HeightPercentage":0.074,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":-1.0,"Center":0,"ViewMode":0,"SmallViewShown":false,"HasSignature":false}],"Comments":[]}],"SmallViewRack":[],"FullViewRack":[{"Process":1,"Nodal":false}],"DefaultDuration":10584000000,"MinDuration":10584000000,"MaxDuration":11113200000,"GuiDuration":51226560000,"Speed":1.0,"Rigidity":false,"MinNull":false,"MaxInf":true,"Signatures":[[0,[4,4]]],"StartState":0,"EndState":1,"StartDate":0,"HeightPercentage":0.0,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":50677354.896736376,"Center":24884344651,"ViewMode":0,"SmallViewShown":false,"HasSignature":true},"StartTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "},"EndTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":1,"Metadata":{"ScriptingName":"Sync.end","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":10584000000,"Events":[1],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":true,"Expression":" { true == false } "},"StartEvent":{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[0],"Condition":"","Date":0,"Offset":0},"EndEvent":{"ObjectName":"Scenario::EventModel","id":1,"Metadata":{"ScriptingName":"Event.end","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":1,"States":[1],"Condition":"","Date":10584000000,"Offset":0},"StartState":{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":0,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},"EndState":{"ObjectName":"Scenario::StateModel","id":1,"Metadata":{"ScriptingName":"State.end","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":0,"NextConstraint":null,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}},"Speed":1.0,"Cables":[{"ObjectName":"Process::Cable","id":25,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":45},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":36},{"ObjectName":"Inlet","ObjectId":6}]},{"ObjectName":"Process::Cable","id":24,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"Process::ProcessModel","ObjectId":41},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"Process::ProcessModel","ObjectId":43},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":23,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":42},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":36},{"ObjectName":"Inlet","ObjectId":5}]},{"ObjectName":"Process::Cable","id":22,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"Process::ProcessModel","ObjectId":41},{"ObjectName":"Outlet","ObjectId":0}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":40},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":21,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":40},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":36},{"ObjectName":"Inlet","ObjectId":4}]},{"ObjectName":"Process::Cable","id":20,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":39},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":36},{"ObjectName":"Inlet","ObjectId":7}]},{"ObjectName":"Process::Cable","id":19,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":38},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":36},{"ObjectName":"Inlet","ObjectId":3}]},{"ObjectName":"Process::Cable","id":18,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":37},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":36},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":17,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":34},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":36},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":16,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":36},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":9,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":29},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":6}]},{"ObjectName":"Process::Cable","id":8,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":28},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":7}]},{"ObjectName":"Process::Cable","id":3,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":21},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":4,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":22},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":3}]},{"ObjectName":"Process::Cable","id":5,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":23},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":4}]},{"ObjectName":"Process::Cable","id":10,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":30},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":5}]},{"ObjectName":"Process::Cable","id":11,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":31},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":12,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":11},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":32},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":13,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":32},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":14,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":11},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":15,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":0}]}],"BusIntervals":[]},"Plugins":[{"uuid":"1f923578-08c3-49be-9ba9-69c144ee2e32","Refresh":false,"Reconnect":false,"MidiRatio":1.0},{"uuid":"6e610e1f-9de2-4c36-90dd-0ef570002a21","RootNode":{},"Children":[{"Device":{"Name":"Window","Protocol":"5a181207-7d40-4ad8-814e-879fcdf8cc31"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":100}},"Name":"screen"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{},"Name":"position"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"cursor"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[44.0,366.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[0.0,0.0],"Values":[[],[]]}},"Name":"absolute"}}]},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"tablet"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1920.0,1080.0],"Values":[[],[]]}},"Name":"absolute"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"z"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"pressure"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}},"Name":"tangential"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-180.0,"Max":180.0}},"Name":"rotation"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_x"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_y"}}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[1920.0,1080.0]},"Domain":{},"Name":"size"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{},"Extended":{"description":"Set to [0, 0] to use the viewport's size"},"Name":"rendersize"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"key"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"code"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"String":""},"Domain":{},"Name":"text"}}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Bool":false},"Domain":{},"Name":"fullscreen"}}]},{"Device":{"Name":"BCF2000","Protocol":"f5e04ef0-16dd-4997-8f81-f5a04b8702bc","IO":0,"API":2,"Endpoint":"BCF2000:BCF2000 MIDI 1 24:0","Port":1,"CreateWholeTree":false,"VirtualPort":false},"Children":[{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"1"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Tuple":[{"Float":0.0},{"Float":0.0}]},"Domain":{"Tuple":{"Min":[{"Int":0},{"Int":0}],"Max":[{"Int":127},{"Int":127}],"Values":[]}},"Name":"control"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":127},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"25"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":1},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"26"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":127},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"27"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":52},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"28"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"29"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"30"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"31"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"32"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"0"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"9"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"18"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"10"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"11"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"19"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"20"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"12"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"13"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"21"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"94"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"17"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"15"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"23"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"24"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"16"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"1"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"2"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"3"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":127},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"4"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"5"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":104},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"6"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":0},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"7"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":110},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"8"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"44"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"43"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"41"}},{"Address":{"ioType":"<->","ClipMode":"Clip","RepetitionFilter":false,"Value":{"Int":64},"Domain":{"Int":{"Min":0,"Max":127}},"Name":"42"}}]}]}]},{"Device":{"Name":"audio","Protocol":"2835e6da-9b55-4029-9802-e1c817acbdc1"},"Children":[{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"in"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"main"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"1"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"2"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"3"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"4"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"5"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"6"}}]},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"out"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"main"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"1"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"2"}}]}]}]}],"Version":4,"Commit":"518792eb151bc26f8519f44a6791f727df88f5c0","Tag":"3.1.1"}